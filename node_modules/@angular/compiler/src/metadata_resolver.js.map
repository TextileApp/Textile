{"version":3,"file":"metadata_resolver.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/metadata_resolver.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationAnimateMetadata, AnimationEntryMetadata, AnimationGroupMetadata, AnimationKeyframesSequenceMetadata, AnimationMetadata, AnimationStateDeclarationMetadata, AnimationStateMetadata, AnimationStateTransitionMetadata, AnimationStyleMetadata, AnimationWithStepsMetadata, Attribute, ChangeDetectionStrategy, Component, Host, Inject, Injectable, ModuleWithProviders, Optional, Provider, Query, SchemaMetadata, Self, SkipSelf, Type, resolveForwardRef} from '@angular/core';\n\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveResolver} from './directive_resolver';\nimport {ListWrapper, StringMapWrapper} from './facade/collection';\nimport {isBlank, isPresent, stringify} from './facade/lang';\nimport {Identifiers, resolveIdentifierToken} from './identifiers';\nimport {hasLifecycleHook} from './lifecycle_reflector';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ComponentStillLoadingError, LIFECYCLE_HOOKS_VALUES, ReflectorReader, reflector} from './private_import_core';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {getUrlScheme} from './url_resolver';\nimport {MODULE_SUFFIX, SyncAsyncResult, ValueTransformer, sanitizeIdentifier, visitValue} from './util';\n\n\n\n// Design notes:\n// - don't lazily create metadata:\n//   For some metadata, we need to do async work sometimes,\n//   so the user has to kick off this loading.\n//   But we want to report errors even when the async work is\n//   not required to check that the user would have been able\n//   to wait correctly.\n\nexport class CompileMetadataResolver {\n  private _directiveCache = new Map<Type<any>, cpl.CompileDirectiveMetadata>();\n  private _directiveSummaryCache = new Map<Type<any>, cpl.CompileDirectiveSummary>();\n  private _pipeCache = new Map<Type<any>, cpl.CompilePipeMetadata>();\n  private _pipeSummaryCache = new Map<Type<any>, cpl.CompilePipeSummary>();\n  private _ngModuleCache = new Map<Type<any>, cpl.CompileNgModuleMetadata>();\n  private _ngModuleOfTypes = new Map<Type<any>, Type<any>>();\n  private _anonymousTypes = new Map<Object, number>();\n  private _anonymousTypeIndex = 0;\n\n  constructor(\n      private _ngModuleResolver: NgModuleResolver, private _directiveResolver: DirectiveResolver,\n      private _pipeResolver: PipeResolver, private _schemaRegistry: ElementSchemaRegistry,\n      private _directiveNormalizer: DirectiveNormalizer,\n      private _reflector: ReflectorReader = reflector) {}\n\n  private sanitizeTokenName(token: any): string {\n    let identifier = stringify(token);\n    if (identifier.indexOf('(') >= 0) {\n      // case: anonymous functions!\n      let found = this._anonymousTypes.get(token);\n      if (!found) {\n        this._anonymousTypes.set(token, this._anonymousTypeIndex++);\n        found = this._anonymousTypes.get(token);\n      }\n      identifier = `anonymous_token_${found}_`;\n    }\n    return sanitizeIdentifier(identifier);\n  }\n\n  clearCacheFor(type: Type<any>) {\n    const dirMeta = this._directiveCache.get(type);\n    this._directiveCache.delete(type);\n    this._directiveSummaryCache.delete(type);\n    this._pipeCache.delete(type);\n    this._pipeSummaryCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n    if (dirMeta) {\n      this._directiveNormalizer.clearCacheFor(dirMeta);\n    }\n  }\n\n  clearCache() {\n    this._directiveCache.clear();\n    this._directiveSummaryCache.clear();\n    this._pipeCache.clear();\n    this._pipeSummaryCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n    this._directiveNormalizer.clearCache();\n  }\n\n  getAnimationEntryMetadata(entry: AnimationEntryMetadata): cpl.CompileAnimationEntryMetadata {\n    const defs = entry.definitions.map(def => this._getAnimationStateMetadata(def));\n    return new cpl.CompileAnimationEntryMetadata(entry.name, defs);\n  }\n\n  private _getAnimationStateMetadata(value: AnimationStateMetadata):\n      cpl.CompileAnimationStateMetadata {\n    if (value instanceof AnimationStateDeclarationMetadata) {\n      const styles = this._getAnimationStyleMetadata(value.styles);\n      return new cpl.CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n    }\n\n    if (value instanceof AnimationStateTransitionMetadata) {\n      return new cpl.CompileAnimationStateTransitionMetadata(\n          value.stateChangeExpr, this._getAnimationMetadata(value.steps));\n    }\n\n    return null;\n  }\n\n  private _getAnimationStyleMetadata(value: AnimationStyleMetadata):\n      cpl.CompileAnimationStyleMetadata {\n    return new cpl.CompileAnimationStyleMetadata(value.offset, value.styles);\n  }\n\n  private _getAnimationMetadata(value: AnimationMetadata): cpl.CompileAnimationMetadata {\n    if (value instanceof AnimationStyleMetadata) {\n      return this._getAnimationStyleMetadata(value);\n    }\n\n    if (value instanceof AnimationKeyframesSequenceMetadata) {\n      return new cpl.CompileAnimationKeyframesSequenceMetadata(\n          value.steps.map(entry => this._getAnimationStyleMetadata(entry)));\n    }\n\n    if (value instanceof AnimationAnimateMetadata) {\n      const animateData =\n          <cpl.CompileAnimationStyleMetadata|cpl.CompileAnimationKeyframesSequenceMetadata>this\n              ._getAnimationMetadata(value.styles);\n      return new cpl.CompileAnimationAnimateMetadata(value.timings, animateData);\n    }\n\n    if (value instanceof AnimationWithStepsMetadata) {\n      const steps = value.steps.map(step => this._getAnimationMetadata(step));\n\n      if (value instanceof AnimationGroupMetadata) {\n        return new cpl.CompileAnimationGroupMetadata(steps);\n      }\n\n      return new cpl.CompileAnimationSequenceMetadata(steps);\n    }\n    return null;\n  }\n\n  private _loadDirectiveMetadata(directiveType: any, isSync: boolean): Promise<any> {\n    if (this._directiveCache.has(directiveType)) {\n      return;\n    }\n    directiveType = resolveForwardRef(directiveType);\n    const nonNormalizedMetadata = this.getNonNormalizedDirectiveMetadata(directiveType);\n\n    const createDirectiveMetadata = (templateMetadata: cpl.CompileTemplateMetadata) => {\n      const normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n        type: nonNormalizedMetadata.type,\n        isComponent: nonNormalizedMetadata.isComponent,\n        selector: nonNormalizedMetadata.selector,\n        exportAs: nonNormalizedMetadata.exportAs,\n        changeDetection: nonNormalizedMetadata.changeDetection,\n        inputs: nonNormalizedMetadata.inputs,\n        outputs: nonNormalizedMetadata.outputs,\n        hostListeners: nonNormalizedMetadata.hostListeners,\n        hostProperties: nonNormalizedMetadata.hostProperties,\n        hostAttributes: nonNormalizedMetadata.hostAttributes,\n        providers: nonNormalizedMetadata.providers,\n        viewProviders: nonNormalizedMetadata.viewProviders,\n        queries: nonNormalizedMetadata.queries,\n        viewQueries: nonNormalizedMetadata.viewQueries,\n        entryComponents: nonNormalizedMetadata.entryComponents,\n        template: templateMetadata\n      });\n      this._directiveCache.set(directiveType, normalizedDirMeta);\n      this._directiveSummaryCache.set(directiveType, normalizedDirMeta.toSummary());\n      return normalizedDirMeta;\n    };\n\n    if (nonNormalizedMetadata.isComponent) {\n      const templateMeta = this._directiveNormalizer.normalizeTemplate({\n        componentType: directiveType,\n        moduleUrl: nonNormalizedMetadata.type.moduleUrl,\n        encapsulation: nonNormalizedMetadata.template.encapsulation,\n        template: nonNormalizedMetadata.template.template,\n        templateUrl: nonNormalizedMetadata.template.templateUrl,\n        styles: nonNormalizedMetadata.template.styles,\n        styleUrls: nonNormalizedMetadata.template.styleUrls,\n        animations: nonNormalizedMetadata.template.animations,\n        interpolation: nonNormalizedMetadata.template.interpolation\n      });\n      if (templateMeta.syncResult) {\n        createDirectiveMetadata(templateMeta.syncResult);\n        return null;\n      } else {\n        if (isSync) {\n          throw new ComponentStillLoadingError(directiveType);\n        }\n        return templateMeta.asyncResult.then(createDirectiveMetadata);\n      }\n    } else {\n      // directive\n      createDirectiveMetadata(null);\n      return null;\n    }\n  }\n\n  getNonNormalizedDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    directiveType = resolveForwardRef(directiveType);\n    const dirMeta = this._directiveResolver.resolve(directiveType);\n    if (!dirMeta) {\n      return null;\n    }\n    let moduleUrl = staticTypeModuleUrl(directiveType);\n    let nonNormalizedTemplateMetadata: cpl.CompileTemplateMetadata;\n\n    if (dirMeta instanceof Component) {\n      // component\n      moduleUrl = componentModuleUrl(this._reflector, directiveType, dirMeta);\n      assertArrayOfStrings('styles', dirMeta.styles);\n      assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n      assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\n      const animations = dirMeta.animations ?\n          dirMeta.animations.map(e => this.getAnimationEntryMetadata(e)) :\n          null;\n\n      nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n        encapsulation: dirMeta.encapsulation,\n        template: dirMeta.template,\n        templateUrl: dirMeta.templateUrl,\n        styles: dirMeta.styles,\n        styleUrls: dirMeta.styleUrls,\n        animations: animations,\n        interpolation: dirMeta.interpolation\n      });\n    }\n\n    let changeDetectionStrategy: ChangeDetectionStrategy = null;\n    let viewProviders: Array<cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[]> = [];\n    let entryComponentMetadata: cpl.CompileIdentifierMetadata[] = [];\n    let selector = dirMeta.selector;\n\n    if (dirMeta instanceof Component) {\n      // Component\n      changeDetectionStrategy = dirMeta.changeDetection;\n      if (dirMeta.viewProviders) {\n        viewProviders = this._getProvidersMetadata(\n            dirMeta.viewProviders, entryComponentMetadata,\n            `viewProviders for \"${stringify(directiveType)}\"`);\n      }\n      if (dirMeta.entryComponents) {\n        entryComponentMetadata =\n            flattenAndDedupeArray(dirMeta.entryComponents)\n                .map((type) => this._getIdentifierMetadata(type, staticTypeModuleUrl(type)))\n                .concat(entryComponentMetadata);\n      }\n      if (!selector) {\n        selector = this._schemaRegistry.getDefaultComponentElementName();\n      }\n    } else {\n      // Directive\n      if (!selector) {\n        throw new Error(`Directive ${stringify(directiveType)} has no selector, please add it!`);\n      }\n    }\n\n    let providers: Array<cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[]> = [];\n    if (isPresent(dirMeta.providers)) {\n      providers = this._getProvidersMetadata(\n          dirMeta.providers, entryComponentMetadata, `providers for \"${stringify(directiveType)}\"`);\n    }\n    let queries: cpl.CompileQueryMetadata[] = [];\n    let viewQueries: cpl.CompileQueryMetadata[] = [];\n    if (isPresent(dirMeta.queries)) {\n      queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n      viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n    }\n\n    return cpl.CompileDirectiveMetadata.create({\n      selector: selector,\n      exportAs: dirMeta.exportAs,\n      isComponent: !!nonNormalizedTemplateMetadata,\n      type: this._getTypeMetadata(directiveType, moduleUrl),\n      template: nonNormalizedTemplateMetadata,\n      changeDetection: changeDetectionStrategy,\n      inputs: dirMeta.inputs,\n      outputs: dirMeta.outputs,\n      host: dirMeta.host,\n      providers: providers,\n      viewProviders: viewProviders,\n      queries: queries,\n      viewQueries: viewQueries,\n      entryComponents: entryComponentMetadata\n    });\n  }\n\n  /**\n   * Gets the metadata for the given directive.\n   * This assumes `loadNgModuleMetadata` has been called first.\n   */\n  getDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    const dirMeta = this._directiveCache.get(directiveType);\n    if (!dirMeta) {\n      throw new Error(\n          `Illegal state: getDirectiveMetadata can only be called after loadNgModuleMetadata for a module that declares it. Directive ${stringify(directiveType)}.`);\n    }\n    return dirMeta;\n  }\n\n  getDirectiveSummary(dirType: any): cpl.CompileDirectiveSummary {\n    const dirSummary = this._directiveSummaryCache.get(dirType);\n    if (!dirSummary) {\n      throw new Error(\n          `Illegal state: getDirectiveSummary can only be called after loadNgModuleMetadata for a module that imports it. Directive ${stringify(dirType)}.`);\n    }\n    return dirSummary;\n  }\n\n  isDirective(type: any) { return this._directiveResolver.isDirective(type); }\n\n  isPipe(type: any) { return this._pipeResolver.isPipe(type); }\n\n  /**\n   * Gets the metadata for the given module.\n   * This assumes `loadNgModuleMetadata` has been called first.\n   */\n  getNgModuleMetadata(moduleType: any): cpl.CompileNgModuleMetadata {\n    const modMeta = this._ngModuleCache.get(moduleType);\n    if (!modMeta) {\n      throw new Error(\n          `Illegal state: getNgModuleMetadata can only be called after loadNgModuleMetadata. Module ${stringify(moduleType)}.`);\n    }\n    return modMeta;\n  }\n\n  private _loadNgModuleSummary(moduleType: any, isSync: boolean): cpl.CompileNgModuleSummary {\n    // TODO(tbosch): add logic to read summary files!\n    // - needs to add directive / pipe summaries to this._directiveSummaryCache /\n    // this._pipeSummaryCache as well!\n    const moduleMeta = this._loadNgModuleMetadata(moduleType, isSync, false);\n    return moduleMeta ? moduleMeta.toSummary() : null;\n  }\n\n  /**\n   * Loads an NgModule and all of its directives. This includes loading the exported directives of\n   * imported modules,\n   * but not private directives of imported modules.\n   */\n  loadNgModuleMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      {ngModule: cpl.CompileNgModuleMetadata, loading: Promise<any>} {\n    const ngModule = this._loadNgModuleMetadata(moduleType, isSync, throwIfNotFound);\n    const loading = ngModule ?\n        Promise.all(ngModule.transitiveModule.directiveLoaders.map(loader => loader())) :\n        Promise.resolve(null);\n    return {ngModule, loading};\n  }\n\n  /**\n   * Get the NgModule metadata without loading the directives.\n   */\n  getUnloadedNgModuleMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      cpl.CompileNgModuleMetadata {\n    return this._loadNgModuleMetadata(moduleType, isSync, throwIfNotFound);\n  }\n\n  private _loadNgModuleMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      cpl.CompileNgModuleMetadata {\n    moduleType = resolveForwardRef(moduleType);\n    let compileMeta = this._ngModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n    const meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n    if (!meta) {\n      return null;\n    }\n    const declaredDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const exportedNonModuleIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n    const declaredPipes: cpl.CompileIdentifierMetadata[] = [];\n    const importedModules: cpl.CompileNgModuleSummary[] = [];\n    const exportedModules: cpl.CompileNgModuleSummary[] = [];\n    const providers: any[] = [];\n    const entryComponents: cpl.CompileIdentifierMetadata[] = [];\n    const bootstrapComponents: cpl.CompileIdentifierMetadata[] = [];\n    const schemas: SchemaMetadata[] = [];\n\n    if (meta.imports) {\n      flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n        let importedModuleType: Type<any>;\n        if (isValidType(importedType)) {\n          importedModuleType = importedType;\n        } else if (importedType && importedType.ngModule) {\n          const moduleWithProviders: ModuleWithProviders = importedType;\n          importedModuleType = moduleWithProviders.ngModule;\n          if (moduleWithProviders.providers) {\n            providers.push(...this._getProvidersMetadata(\n                moduleWithProviders.providers, entryComponents,\n                `provider for the NgModule '${stringify(importedModuleType)}'`));\n          }\n        }\n\n        if (importedModuleType) {\n          const importedModuleSummary = this._loadNgModuleSummary(importedModuleType, isSync);\n          if (!importedModuleSummary) {\n            throw new Error(\n                `Unexpected ${this._getTypeDescriptor(importedType)} '${stringify(importedType)}' imported by the module '${stringify(moduleType)}'`);\n          }\n          importedModules.push(importedModuleSummary);\n        } else {\n          throw new Error(\n              `Unexpected value '${stringify(importedType)}' imported by the module '${stringify(moduleType)}'`);\n        }\n      });\n    }\n\n    if (meta.exports) {\n      flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n        if (!isValidType(exportedType)) {\n          throw new Error(\n              `Unexpected value '${stringify(exportedType)}' exported by the module '${stringify(moduleType)}'`);\n        }\n        const exportedModuleSummary = this._loadNgModuleSummary(exportedType, isSync);\n        if (exportedModuleSummary) {\n          exportedModules.push(exportedModuleSummary);\n        } else {\n          exportedNonModuleIdentifiers.push(\n              this._getIdentifierMetadata(exportedType, staticTypeModuleUrl(exportedType)));\n        }\n      });\n    }\n\n    // Note: This will be modified later, so we rely on\n    // getting a new instance every time!\n    const transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n    if (meta.declarations) {\n      flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n        if (!isValidType(declaredType)) {\n          throw new Error(\n              `Unexpected value '${stringify(declaredType)}' declared by the module '${stringify(moduleType)}'`);\n        }\n        const declaredIdentifier =\n            this._getIdentifierMetadata(declaredType, staticTypeModuleUrl(declaredType));\n        if (this._directiveResolver.isDirective(declaredType)) {\n          transitiveModule.directivesSet.add(declaredType);\n          transitiveModule.directives.push(declaredIdentifier);\n          declaredDirectives.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n          transitiveModule.directiveLoaders.push(\n              () => this._loadDirectiveMetadata(declaredType, isSync));\n        } else if (this._pipeResolver.isPipe(declaredType)) {\n          transitiveModule.pipesSet.add(declaredType);\n          transitiveModule.pipes.push(declaredIdentifier);\n          declaredPipes.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n          this._loadPipeMetadata(declaredType);\n        } else {\n          throw new Error(\n              `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringify(declaredType)}' declared by the module '${stringify(moduleType)}'`);\n        }\n      });\n    }\n\n    const exportedDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const exportedPipes: cpl.CompileIdentifierMetadata[] = [];\n    exportedNonModuleIdentifiers.forEach((exportedId) => {\n      if (transitiveModule.directivesSet.has(exportedId.reference)) {\n        exportedDirectives.push(exportedId);\n      } else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n        exportedPipes.push(exportedId);\n      } else {\n        throw new Error(\n            `Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringify(exportedId.reference)} from ${stringify(moduleType)} as it was neither declared nor imported!`);\n      }\n    });\n\n    // The providers of the module have to go last\n    // so that they overwrite any other provider we already added.\n    if (meta.providers) {\n      providers.push(...this._getProvidersMetadata(\n          meta.providers, entryComponents, `provider for the NgModule '${stringify(moduleType)}'`));\n    }\n\n    if (meta.entryComponents) {\n      entryComponents.push(\n          ...flattenAndDedupeArray(meta.entryComponents)\n              .map(type => this._getTypeMetadata(type, staticTypeModuleUrl(type))));\n    }\n\n    if (meta.bootstrap) {\n      const typeMetadata = flattenAndDedupeArray(meta.bootstrap).map(type => {\n        if (!isValidType(type)) {\n          throw new Error(\n              `Unexpected value '${stringify(type)}' used in the bootstrap property of module '${stringify(moduleType)}'`);\n        }\n        return this._getTypeMetadata(type, staticTypeModuleUrl(type));\n      });\n      bootstrapComponents.push(...typeMetadata);\n    }\n\n    entryComponents.push(...bootstrapComponents);\n\n    if (meta.schemas) {\n      schemas.push(...flattenAndDedupeArray(meta.schemas));\n    }\n\n    transitiveModule.entryComponents.push(...entryComponents);\n    transitiveModule.providers.push(...providers);\n\n    compileMeta = new cpl.CompileNgModuleMetadata({\n      type: this._getTypeMetadata(moduleType, staticTypeModuleUrl(moduleType)),\n      providers,\n      entryComponents,\n      bootstrapComponents,\n      schemas,\n      declaredDirectives,\n      exportedDirectives,\n      declaredPipes,\n      exportedPipes,\n      importedModules,\n      exportedModules,\n      transitiveModule,\n      id: meta.id,\n    });\n\n    transitiveModule.modules.push(compileMeta.toInjectorSummary());\n    this._ngModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n\n  private _getTypeDescriptor(type: Type<any>): string {\n    if (this._directiveResolver.isDirective(type)) {\n      return 'directive';\n    }\n\n    if (this._pipeResolver.isPipe(type)) {\n      return 'pipe';\n    }\n\n    if (this._ngModuleResolver.isNgModule(type)) {\n      return 'module';\n    }\n\n    if ((type as any).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n\n\n  private _addTypeToModule(type: Type<any>, moduleType: Type<any>) {\n    const oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      throw new Error(\n          `Type ${stringify(type)} is part of the declarations of 2 modules: ${stringify(oldModule)} and ${stringify(moduleType)}! ` +\n          `Please consider moving ${stringify(type)} to a higher module that imports ${stringify(oldModule)} and ${stringify(moduleType)}. ` +\n          `You can also create a new NgModule that exports and includes ${stringify(type)} then import that NgModule in ${stringify(oldModule)} and ${stringify(moduleType)}.`);\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n\n  private _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleSummary[],\n      exportedModules: cpl.CompileNgModuleSummary[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const transitiveModules = getTransitiveImportedModules(importedModules.concat(exportedModules));\n    const providers = flattenArray(transitiveModules.map((ngModule) => ngModule.providers));\n    const entryComponents =\n        flattenArray(transitiveModules.map((ngModule) => ngModule.entryComponents));\n\n    const transitiveExportedModules = getTransitiveExportedModules(importedModules);\n    const directives =\n        flattenArray(transitiveExportedModules.map((ngModule) => ngModule.exportedDirectives));\n    const pipes = flattenArray(transitiveExportedModules.map((ngModule) => ngModule.exportedPipes));\n    const directiveLoaders =\n        ListWrapper.flatten(transitiveExportedModules.map(ngModule => ngModule.directiveLoaders));\n    return new cpl.TransitiveCompileNgModuleMetadata(\n        transitiveModules, providers, entryComponents, directives, pipes, directiveLoaders);\n  }\n\n  private _getIdentifierMetadata(type: Type<any>, moduleUrl: string):\n      cpl.CompileIdentifierMetadata {\n    type = resolveForwardRef(type);\n    return new cpl.CompileIdentifierMetadata(\n        {name: this.sanitizeTokenName(type), moduleUrl, reference: type});\n  }\n\n  private _getTypeMetadata(type: Type<any>, moduleUrl: string, dependencies: any[] = null):\n      cpl.CompileTypeMetadata {\n    const identifier = this._getIdentifierMetadata(type, moduleUrl);\n    return new cpl.CompileTypeMetadata({\n      name: identifier.name,\n      moduleUrl: identifier.moduleUrl,\n      reference: identifier.reference,\n      diDeps: this._getDependenciesMetadata(identifier.reference, dependencies),\n      lifecycleHooks:\n          LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(hook, identifier.reference)),\n    });\n  }\n\n  private _getFactoryMetadata(factory: Function, moduleUrl: string, dependencies: any[] = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return new cpl.CompileFactoryMetadata({\n      name: this.sanitizeTokenName(factory),\n      moduleUrl,\n      reference: factory,\n      diDeps: this._getDependenciesMetadata(factory, dependencies)\n    });\n  }\n\n  /**\n   * Gets the metadata for the given pipe.\n   * This assumes `loadNgModuleMetadata` has been called first.\n   */\n  getPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    const pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      throw new Error(\n          `Illegal state: getPipeMetadata can only be called after loadNgModuleMetadata for a module that declares it. Pipe ${stringify(pipeType)}.`);\n    }\n    return pipeMeta;\n  }\n\n  getPipeSummary(pipeType: any): cpl.CompilePipeSummary {\n    const pipeSummary = this._pipeSummaryCache.get(pipeType);\n    if (!pipeSummary) {\n      throw new Error(\n          `Illegal state: getPipeSummary can only be called after loadNgModuleMetadata for a module that imports it. Pipe ${stringify(pipeType)}.`);\n    }\n    return pipeSummary;\n  }\n\n  getOrLoadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    let pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      pipeMeta = this._loadPipeMetadata(pipeType);\n    }\n    return pipeMeta;\n  }\n\n  private _loadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    const pipeAnnotation = this._pipeResolver.resolve(pipeType);\n\n    const pipeMeta = new cpl.CompilePipeMetadata({\n      type: this._getTypeMetadata(pipeType, staticTypeModuleUrl(pipeType)),\n      name: pipeAnnotation.name,\n      pure: pipeAnnotation.pure\n    });\n    this._pipeCache.set(pipeType, pipeMeta);\n    this._pipeSummaryCache.set(pipeType, pipeMeta.toSummary());\n    return pipeMeta;\n  }\n\n  private _getDependenciesMetadata(typeOrFunc: Type<any>|Function, dependencies: any[]):\n      cpl.CompileDiDependencyMetadata[] {\n    let hasUnknownDeps = false;\n    const params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    const dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let isAttribute = false;\n      let isHost = false;\n      let isSelf = false;\n      let isSkipSelf = false;\n      let isOptional = false;\n      let token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry) => {\n          if (paramEntry instanceof Host) {\n            isHost = true;\n          } else if (paramEntry instanceof Self) {\n            isSelf = true;\n          } else if (paramEntry instanceof SkipSelf) {\n            isSkipSelf = true;\n          } else if (paramEntry instanceof Optional) {\n            isOptional = true;\n          } else if (paramEntry instanceof Attribute) {\n            isAttribute = true;\n            token = paramEntry.attributeName;\n          } else if (paramEntry instanceof Inject) {\n            token = paramEntry.token;\n          } else if (isValidType(paramEntry) && isBlank(token)) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (isBlank(token)) {\n        hasUnknownDeps = true;\n        return null;\n      }\n\n      return new cpl.CompileDiDependencyMetadata({\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        token: this._getTokenMetadata(token)\n      });\n\n    });\n\n    if (hasUnknownDeps) {\n      const depsTokens =\n          dependenciesMetadata.map((dep) => dep ? stringify(dep.token) : '?').join(', ');\n      throw new Error(\n          `Can't resolve all parameters for ${stringify(typeOrFunc)}: (${depsTokens}).`);\n    }\n\n    return dependenciesMetadata;\n  }\n\n  private _getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let compileToken: cpl.CompileTokenMetadata;\n    if (typeof token === 'string') {\n      compileToken = new cpl.CompileTokenMetadata({value: token});\n    } else {\n      compileToken = new cpl.CompileTokenMetadata({\n        identifier: new cpl.CompileIdentifierMetadata({\n          reference: token,\n          name: this.sanitizeTokenName(token),\n          moduleUrl: staticTypeModuleUrl(token)\n        })\n      });\n    }\n    return compileToken;\n  }\n\n  private _getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileIdentifierMetadata[],\n      debugInfo?: string): Array<cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[]> {\n    const compileProviders: Array<cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[]> = [];\n    providers.forEach((provider: any, providerIdx: number) => {\n      provider = resolveForwardRef(provider);\n      if (provider && typeof provider == 'object' && provider.hasOwnProperty('provide')) {\n        provider = new cpl.ProviderMeta(provider.provide, provider);\n      }\n      let compileProvider: cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[];\n      if (Array.isArray(provider)) {\n        compileProvider = this._getProvidersMetadata(provider, targetEntryComponents, debugInfo);\n      } else if (provider instanceof cpl.ProviderMeta) {\n        const tokenMeta = this._getTokenMetadata(provider.token);\n        if (tokenMeta.reference ===\n            resolveIdentifierToken(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS).reference) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(provider));\n        } else {\n          compileProvider = this.getProviderMetadata(provider);\n        }\n      } else if (isValidType(provider)) {\n        compileProvider = this._getTypeMetadata(provider, staticTypeModuleUrl(provider));\n      } else {\n        const providersInfo =\n            (<string[]>providers.reduce(\n                 (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                   if (seenProviderIdx < providerIdx) {\n                     soFar.push(`${stringify(seenProvider)}`);\n                   } else if (seenProviderIdx == providerIdx) {\n                     soFar.push(`?${stringify(seenProvider)}?`);\n                   } else if (seenProviderIdx == providerIdx + 1) {\n                     soFar.push('...');\n                   }\n                   return soFar;\n                 },\n                 []))\n                .join(', ');\n\n        throw new Error(\n            `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`);\n      }\n      if (compileProvider) {\n        compileProviders.push(compileProvider);\n      }\n    });\n    return compileProviders;\n  }\n\n  private _getEntryComponentsFromProvider(provider: cpl.ProviderMeta):\n      cpl.CompileIdentifierMetadata[] {\n    const components: cpl.CompileIdentifierMetadata[] = [];\n    const collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      throw new Error(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`);\n    }\n\n    if (!provider.multi) {\n      throw new Error(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`);\n    }\n\n    convertToCompileValue(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      if (this._directiveResolver.isDirective(identifier.reference)) {\n        components.push(identifier);\n      }\n    });\n    return components;\n  }\n\n  getProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let compileDeps: cpl.CompileDiDependencyMetadata[];\n    let compileTypeMetadata: cpl.CompileTypeMetadata = null;\n    let compileFactoryMetadata: cpl.CompileFactoryMetadata = null;\n\n    if (provider.useClass) {\n      compileTypeMetadata = this._getTypeMetadata(\n          provider.useClass, staticTypeModuleUrl(provider.useClass), provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this._getFactoryMetadata(\n          provider.useFactory, staticTypeModuleUrl(provider.useFactory), provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return new cpl.CompileProviderMetadata({\n      token: this._getTokenMetadata(provider.token),\n      useClass: compileTypeMetadata,\n      useValue: convertToCompileValue(provider.useValue, []),\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n      deps: compileDeps,\n      multi: provider.multi\n    });\n  }\n\n  private _getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type<any>): cpl.CompileQueryMetadata[] {\n    const res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this._getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n\n  private _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n\n  private _getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type<any>|Function):\n      cpl.CompileQueryMetadata {\n    let selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors =\n          this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        throw new Error(\n            `Can't construct a query for the property \"${propertyName}\" of \"${stringify(typeOrFunc)}\" since the query selector wasn't defined.`);\n      }\n      selectors = [this._getTokenMetadata(q.selector)];\n    }\n\n    return new cpl.CompileQueryMetadata({\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this._getTokenMetadata(q.read) : null\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: NgModuleResolver, },\n{type: DirectiveResolver, },\n{type: PipeResolver, },\n{type: ElementSchemaRegistry, },\n{type: DirectiveNormalizer, },\n{type: ReflectorReader, },\n];\n}\n\nfunction getTransitiveExportedModules(\n    modules: cpl.CompileNgModuleDirectiveSummary[],\n    targetModules: cpl.CompileNgModuleDirectiveSummary[] = [],\n    visitedModules = new Set<Type<any>>()): cpl.CompileNgModuleDirectiveSummary[] {\n  modules.forEach((ngModule) => {\n    if (!visitedModules.has(ngModule.type.reference)) {\n      visitedModules.add(ngModule.type.reference);\n      getTransitiveExportedModules(ngModule.exportedModules, targetModules, visitedModules);\n      // Add after recursing so imported/exported modules are before the module itself.\n      // This is important for overwriting providers of imported modules!\n      targetModules.push(ngModule);\n    }\n  });\n  return targetModules;\n}\n\nfunction getTransitiveImportedModules(\n    modules: cpl.CompileNgModuleInjectorSummary[],\n    targetModules: cpl.CompileNgModuleInjectorSummary[] = [],\n    visitedModules = new Set<Type<any>>()): cpl.CompileNgModuleInjectorSummary[] {\n  modules.forEach((ngModule) => {\n    if (!visitedModules.has(ngModule.type.reference)) {\n      visitedModules.add(ngModule.type.reference);\n      const nestedModules = ngModule.importedModules.concat(ngModule.exportedModules);\n      getTransitiveImportedModules(nestedModules, targetModules, visitedModules);\n      // Add after recursing so imported/exported modules are before the module itself.\n      // This is important for overwriting providers of imported modules!\n      targetModules.push(ngModule);\n    }\n  });\n  return targetModules;\n}\n\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let i = 0; i < tree.length; i++) {\n      const item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n\nfunction dedupeArray(array: any[]): Array<any> {\n  if (array) {\n    return Array.from(new Set(array));\n  }\n  return [];\n}\n\nfunction flattenAndDedupeArray(tree: any[]): Array<any> {\n  return dedupeArray(flattenArray(tree));\n}\n\nfunction isValidType(value: any): boolean {\n  return cpl.isStaticSymbol(value) || (value instanceof Type);\n}\n\nfunction staticTypeModuleUrl(value: any): string {\n  return cpl.isStaticSymbol(value) ? value.filePath : null;\n}\n\nfunction componentModuleUrl(\n    reflector: ReflectorReader, type: Type<any>, cmpMetadata: Component): string {\n  if (cpl.isStaticSymbol(type)) {\n    return staticTypeModuleUrl(type);\n  }\n\n  const moduleId = cmpMetadata.moduleId;\n\n  if (typeof moduleId === 'string') {\n    const scheme = getUrlScheme(moduleId);\n    return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n  } else if (moduleId !== null && moduleId !== void 0) {\n    throw new Error(\n        `moduleId should be a string in \"${stringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n        `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n  }\n\n  return reflector.importUri(type);\n}\n\nfunction convertToCompileValue(\n    value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n  return visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\n\nclass _CompileValueConverter extends ValueTransformer {\n  visitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    let identifier: cpl.CompileIdentifierMetadata;\n    if (cpl.isStaticSymbol(value)) {\n      identifier = new cpl.CompileIdentifierMetadata(\n          {name: value.name, moduleUrl: value.filePath, reference: value});\n    } else {\n      identifier = new cpl.CompileIdentifierMetadata({reference: value});\n    }\n    targetIdentifiers.push(identifier);\n    return identifier;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}