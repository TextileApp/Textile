{"version":3,"file":"runtime_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/runtime_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, ComponentFactory, Injectable, Injector, ModuleWithComponentFactories, NgModuleFactory, SchemaMetadata, Type} from '@angular/core';\n\nimport {AnimationCompiler} from './animation/animation_compiler';\nimport {AnimationParser} from './animation/animation_parser';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompilePipeMetadata, ProviderMeta, createHostComponentMeta} from './compile_metadata';\nimport {CompilerConfig} from './config';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveWrapperCompiler} from './directive_wrapper_compiler';\nimport {stringify} from './facade/lang';\nimport {CompileMetadataResolver} from './metadata_resolver';\nimport {NgModuleCompiler} from './ng_module_compiler';\nimport * as ir from './output/output_ast';\nimport {interpretStatements} from './output/output_interpreter';\nimport {jitStatements} from './output/output_jit';\nimport {CompiledStylesheet, StyleCompiler} from './style_compiler';\nimport {TemplateParser} from './template_parser/template_parser';\nimport {SyncAsyncResult} from './util';\nimport {ComponentFactoryDependency, DirectiveWrapperDependency, ViewClassDependency, ViewCompiler} from './view_compiler/view_compiler';\n\n\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * @security  When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\n\nexport class RuntimeCompiler implements Compiler {\n  private _compiledTemplateCache = new Map<Type<any>, CompiledTemplate>();\n  private _compiledHostTemplateCache = new Map<Type<any>, CompiledTemplate>();\n  private _compiledDirectiveWrapperCache = new Map<Type<any>, Type<any>>();\n  private _compiledNgModuleCache = new Map<Type<any>, NgModuleFactory<any>>();\n  private _animationCompiler = new AnimationCompiler();\n\n  constructor(\n      private _injector: Injector, private _metadataResolver: CompileMetadataResolver,\n      private _templateParser: TemplateParser, private _styleCompiler: StyleCompiler,\n      private _viewCompiler: ViewCompiler, private _ngModuleCompiler: NgModuleCompiler,\n      private _directiveWrapperCompiler: DirectiveWrapperCompiler,\n      private _compilerConfig: CompilerConfig, private _animationParser: AnimationParser) {}\n\n  get injector(): Injector { return this._injector; }\n\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._compileModuleAndComponents(moduleType, true).syncResult;\n  }\n\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._compileModuleAndComponents(moduleType, false).asyncResult;\n  }\n\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n  }\n\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n  }\n\n  private _compileModuleAndComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsyncResult<NgModuleFactory<T>> {\n    const loadingPromise = this._loadModules(moduleType, isSync);\n    const createResult = () => {\n      this._compileComponents(moduleType, null);\n      return this._compileModule(moduleType);\n    };\n    if (isSync) {\n      return new SyncAsyncResult(createResult());\n    } else {\n      return new SyncAsyncResult(null, loadingPromise.then(createResult));\n    }\n  }\n\n  private _compileModuleAndAllComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsyncResult<ModuleWithComponentFactories<T>> {\n    const loadingPromise = this._loadModules(moduleType, isSync);\n    const createResult = () => {\n      const componentFactories: ComponentFactory<any>[] = [];\n      this._compileComponents(moduleType, componentFactories);\n      return new ModuleWithComponentFactories(this._compileModule(moduleType), componentFactories);\n    };\n    if (isSync) {\n      return new SyncAsyncResult(createResult());\n    } else {\n      return new SyncAsyncResult(null, loadingPromise.then(createResult));\n    }\n  }\n\n  private _loadModules(mainModule: any, isSync: boolean): Promise<any> {\n    const loadingPromises: Promise<any>[] = [];\n    const {ngModule, loading} = this._metadataResolver.loadNgModuleMetadata(mainModule, isSync);\n    loadingPromises.push(loading);\n    // Note: the loadingPromise for a module only includes the loading of the exported directives\n    // of imported modules.\n    // However, for runtime compilation, we want to transitively compile all modules,\n    // so we also need to call loadNgModuleMetadata for all nested modules.\n    ngModule.transitiveModule.modules.forEach((localModuleMeta) => {\n      loadingPromises.push(\n          this._metadataResolver.loadNgModuleMetadata(localModuleMeta.type.reference, isSync)\n              .loading);\n    });\n    return Promise.all(loadingPromises);\n  }\n\n  private _compileModule<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    let ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n    if (!ngModuleFactory) {\n      const moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n      // Always provide a bound Compiler\n      const extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(\n          Compiler, {useFactory: () => new ModuleBoundCompiler(this, moduleMeta.type.reference)}))];\n      const compileResult = this._ngModuleCompiler.compile(moduleMeta, extraProviders);\n      compileResult.dependencies.forEach((dep) => {\n        dep.placeholder.reference =\n            this._assertComponentKnown(dep.comp.reference, true).proxyComponentFactory;\n        dep.placeholder.name = `compFactory_${dep.comp.name}`;\n      });\n      if (!this._compilerConfig.useJit) {\n        ngModuleFactory =\n            interpretStatements(compileResult.statements, compileResult.ngModuleFactoryVar);\n      } else {\n        ngModuleFactory = jitStatements(\n            `/${moduleMeta.type.name}/module.ngfactory.js`, compileResult.statements,\n            compileResult.ngModuleFactoryVar);\n      }\n      this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n    }\n    return ngModuleFactory;\n  }\n\n  /**\n   * @internal\n   */\n  _compileComponents(mainModule: Type<any>, allComponentFactories: ComponentFactory<any>[]) {\n    const ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n    const moduleByDirective = new Map<any, CompileNgModuleMetadata>();\n    const templates = new Set<CompiledTemplate>();\n\n    ngModule.transitiveModule.modules.forEach((localModuleSummary) => {\n      const localModuleMeta =\n          this._metadataResolver.getNgModuleMetadata(localModuleSummary.type.reference);\n      localModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n        moduleByDirective.set(dirIdentifier.reference, localModuleMeta);\n        const dirMeta = this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n        this._compileDirectiveWrapper(dirMeta, localModuleMeta);\n        if (dirMeta.isComponent) {\n          templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n          if (allComponentFactories) {\n            const template =\n                this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n            templates.add(template);\n            allComponentFactories.push(template.proxyComponentFactory);\n          }\n        }\n      });\n    });\n    ngModule.transitiveModule.modules.forEach((localModuleSummary) => {\n      const localModuleMeta =\n          this._metadataResolver.getNgModuleMetadata(localModuleSummary.type.reference);\n      localModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n        const dirMeta = this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n        if (dirMeta.isComponent) {\n          dirMeta.entryComponents.forEach((entryComponentType) => {\n            const moduleMeta = moduleByDirective.get(entryComponentType.reference);\n            templates.add(\n                this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n          });\n        }\n      });\n      localModuleMeta.entryComponents.forEach((entryComponentType) => {\n        const moduleMeta = moduleByDirective.get(entryComponentType.reference);\n        templates.add(this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n      });\n    });\n    templates.forEach((template) => this._compileTemplate(template));\n  }\n\n  clearCacheFor(type: Type<any>) {\n    this._compiledNgModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    const compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n\n  clearCache(): void {\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._compiledNgModuleCache.clear();\n  }\n\n  private _createCompiledHostTemplate(compType: Type<any>, ngModule: CompileNgModuleMetadata):\n      CompiledTemplate {\n    if (!ngModule) {\n      throw new Error(\n          `Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n    }\n    let compiledTemplate = this._compiledHostTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      const compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n      assertComponent(compMeta);\n      const hostMeta = createHostComponentMeta(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          true, compMeta.selector, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n      this._compiledHostTemplateCache.set(compType, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _createCompiledTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata): CompiledTemplate {\n    let compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n    if (!compiledTemplate) {\n      assertComponent(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.selector, compMeta.type, compMeta, ngModule,\n          ngModule.transitiveModule.directives);\n      this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _assertComponentKnown(compType: any, isHost: boolean): CompiledTemplate {\n    const compiledTemplate = isHost ? this._compiledHostTemplateCache.get(compType) :\n                                      this._compiledTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      throw new Error(\n          `Illegal state: Compiled view for component ${stringify(compType)} (host: ${isHost}) does not exist!`);\n    }\n    return compiledTemplate;\n  }\n\n  private _assertDirectiveWrapper(dirType: any): Type<any> {\n    const dirWrapper = this._compiledDirectiveWrapperCache.get(dirType);\n    if (!dirWrapper) {\n      throw new Error(\n          `Illegal state: Directive wrapper for ${stringify(dirType)} has not been compiled!`);\n    }\n    return dirWrapper;\n  }\n\n  private _compileDirectiveWrapper(\n      dirMeta: CompileDirectiveMetadata, moduleMeta: CompileNgModuleMetadata): void {\n    const compileResult = this._directiveWrapperCompiler.compile(dirMeta);\n    const statements = compileResult.statements;\n    let directiveWrapperClass: any;\n    if (!this._compilerConfig.useJit) {\n      directiveWrapperClass = interpretStatements(statements, compileResult.dirWrapperClassVar);\n    } else {\n      directiveWrapperClass = jitStatements(\n          `/${moduleMeta.type.name}/${dirMeta.type.name}/wrapper.ngfactory.js`, statements,\n          compileResult.dirWrapperClassVar);\n    }\n    this._compiledDirectiveWrapperCache.set(dirMeta.type.reference, directiveWrapperClass);\n  }\n\n  private _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    const compMeta = template.compMeta;\n    const externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    const stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n    stylesCompileResult.externalStylesheets.forEach(\n        (r) => { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n    this._resolveStylesCompileResult(\n        stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n    const parsedAnimations = this._animationParser.parseComponent(compMeta);\n    const directives =\n        template.directives.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const pipes = template.ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    const parsedTemplate = this._templateParser.parse(\n        compMeta, compMeta.template.template, directives, pipes, template.ngModule.schemas,\n        compMeta.type.name);\n    const compiledAnimations =\n        this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n    const compileResult = this._viewCompiler.compileComponent(\n        compMeta, parsedTemplate, ir.variable(stylesCompileResult.componentStylesheet.stylesVar),\n        pipes, compiledAnimations);\n    compileResult.dependencies.forEach((dep) => {\n      let depTemplate: CompiledTemplate;\n      if (dep instanceof ViewClassDependency) {\n        const vfd = <ViewClassDependency>dep;\n        depTemplate = this._assertComponentKnown(vfd.comp.reference, false);\n        vfd.placeholder.reference = depTemplate.proxyViewClass;\n        vfd.placeholder.name = `View_${vfd.comp.name}`;\n      } else if (dep instanceof ComponentFactoryDependency) {\n        const cfd = <ComponentFactoryDependency>dep;\n        depTemplate = this._assertComponentKnown(cfd.comp.reference, true);\n        cfd.placeholder.reference = depTemplate.proxyComponentFactory;\n        cfd.placeholder.name = `compFactory_${cfd.comp.name}`;\n      } else if (dep instanceof DirectiveWrapperDependency) {\n        const dwd = <DirectiveWrapperDependency>dep;\n        dwd.placeholder.reference = this._assertDirectiveWrapper(dwd.dir.reference);\n      }\n    });\n    const statements = stylesCompileResult.componentStylesheet.statements\n                           .concat(...compiledAnimations.map(ca => ca.statements))\n                           .concat(compileResult.statements);\n    let viewClass: any;\n    if (!this._compilerConfig.useJit) {\n      viewClass = interpretStatements(statements, compileResult.viewClassVar);\n    } else {\n      viewClass = jitStatements(\n          `/${template.ngModule.type.name}/${template.compType.name}/${template.isHost?'host':'component'}.ngfactory.js`,\n          statements, compileResult.viewClassVar);\n    }\n    template.compiled(viewClass);\n  }\n\n  private _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      const nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n      const nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.valuePlaceholder.reference = nestedStylesArr;\n      dep.valuePlaceholder.name = `importedStyles${i}`;\n    });\n  }\n\n  private _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    if (!this._compilerConfig.useJit) {\n      return interpretStatements(result.statements, result.stylesVar);\n    } else {\n      return jitStatements(`/${result.meta.moduleUrl}.css.js`, result.statements, result.stylesVar);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Injector, },\n{type: CompileMetadataResolver, },\n{type: TemplateParser, },\n{type: StyleCompiler, },\n{type: ViewCompiler, },\n{type: NgModuleCompiler, },\n{type: DirectiveWrapperCompiler, },\n{type: CompilerConfig, },\n{type: AnimationParser, },\n];\n}\n\nclass CompiledTemplate {\n  private _viewClass: Function = null;\n  proxyViewClass: Type<any>;\n  proxyComponentFactory: ComponentFactory<any>;\n  isCompiled = false;\n\n  constructor(\n      public isHost: boolean, selector: string, public compType: CompileIdentifierMetadata,\n      public compMeta: CompileDirectiveMetadata, public ngModule: CompileNgModuleMetadata,\n      public directives: CompileIdentifierMetadata[]) {\n    const self = this;\n    this.proxyViewClass = <any>function() {\n      if (!self._viewClass) {\n        throw new Error(\n            `Illegal state: CompiledTemplate for ${stringify(self.compType)} is not compiled yet!`);\n      }\n      return self._viewClass.apply(this, arguments);\n    };\n    this.proxyComponentFactory = isHost ?\n        new ComponentFactory<any>(selector, this.proxyViewClass, compType.reference) :\n        null;\n  }\n\n  compiled(viewClass: Function) {\n    this._viewClass = viewClass;\n    this.proxyViewClass.prototype = viewClass.prototype;\n    this.isCompiled = true;\n  }\n}\n\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(`Could not compile '${meta.type.name}' because it is not a component.`);\n  }\n}\n\n/**\n * Implements `Compiler` by delegating to the RuntimeCompiler using a known module.\n */\nclass ModuleBoundCompiler implements Compiler {\n  constructor(private _delegate: RuntimeCompiler, private _ngModule: Type<any>) {}\n\n  get _injector(): Injector { return this._delegate.injector; }\n\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType);\n  }\n\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType);\n  }\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n  }\n\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n  }\n\n  /**\n   * Clears all caches\n   */\n  clearCache(): void { this._delegate.clearCache(); }\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type<any>) { this._delegate.clearCacheFor(type); }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}