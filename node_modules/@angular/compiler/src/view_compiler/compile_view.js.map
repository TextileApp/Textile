{"version":3,"file":"compile_view.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/compile_view.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEntryCompileResult} from '../animation/animation_compiler';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompilePipeSummary} from '../compile_metadata';\nimport {EventHandlerVars, NameResolver} from '../compiler_util/expression_converter';\nimport {createPureProxy} from '../compiler_util/identifier_util';\nimport {CompilerConfig} from '../config';\nimport {isPresent} from '../facade/lang';\nimport {Identifiers, resolveIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {ViewType} from '../private_import_core';\n\nimport {CompileElement, CompileNode} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {CompilePipe} from './compile_pipe';\nimport {CompileQuery, addQueryToTokenMap, createQueryList} from './compile_query';\nimport {getPropertyInView, getViewClassName} from './util';\n\nexport enum CompileViewRootNodeType {\n  Node,\n  ViewContainer,\n  NgContent\n}\n\nexport class CompileViewRootNode {\n  constructor(\n      public type: CompileViewRootNodeType, public expr: o.Expression,\n      public ngContentIndex?: number) {}\n}\n\nexport class CompileView implements NameResolver {\n  public viewType: ViewType;\n  public viewQueries: Map<any, CompileQuery[]>;\n\n  public viewChildren: o.Expression[] = [];\n\n  public nodes: CompileNode[] = [];\n\n  public rootNodes: CompileViewRootNode[] = [];\n  public lastRenderNode: o.Expression = o.NULL_EXPR;\n\n  public viewContainers: o.Expression[] = [];\n\n  public createMethod: CompileMethod;\n  public animationBindingsMethod: CompileMethod;\n  public injectorGetMethod: CompileMethod;\n  public updateContentQueriesMethod: CompileMethod;\n  public dirtyParentQueriesMethod: CompileMethod;\n  public updateViewQueriesMethod: CompileMethod;\n  public detectChangesInInputsMethod: CompileMethod;\n  public detectChangesRenderPropertiesMethod: CompileMethod;\n  public afterContentLifecycleCallbacksMethod: CompileMethod;\n  public afterViewLifecycleCallbacksMethod: CompileMethod;\n  public destroyMethod: CompileMethod;\n  public detachMethod: CompileMethod;\n  public methods: o.ClassMethod[] = [];\n\n  public ctorStmts: o.Statement[] = [];\n  public fields: o.ClassField[] = [];\n  public getters: o.ClassGetter[] = [];\n  public disposables: o.Expression[] = [];\n\n  public componentView: CompileView;\n  public purePipes = new Map<string, CompilePipe>();\n  public pipes: CompilePipe[] = [];\n  public locals = new Map<string, o.Expression>();\n  public className: string;\n  public classType: o.Type;\n  public classExpr: o.ReadVarExpr;\n\n  public literalArrayCount = 0;\n  public literalMapCount = 0;\n  public pipeCount = 0;\n\n  public componentContext: o.Expression;\n\n  constructor(\n      public component: CompileDirectiveMetadata, public genConfig: CompilerConfig,\n      public pipeMetas: CompilePipeSummary[], public styles: o.Expression,\n      public animations: AnimationEntryCompileResult[], public viewIndex: number,\n      public declarationElement: CompileElement, public templateVariableBindings: string[][]) {\n    this.createMethod = new CompileMethod(this);\n    this.animationBindingsMethod = new CompileMethod(this);\n    this.injectorGetMethod = new CompileMethod(this);\n    this.updateContentQueriesMethod = new CompileMethod(this);\n    this.dirtyParentQueriesMethod = new CompileMethod(this);\n    this.updateViewQueriesMethod = new CompileMethod(this);\n    this.detectChangesInInputsMethod = new CompileMethod(this);\n    this.detectChangesRenderPropertiesMethod = new CompileMethod(this);\n\n    this.afterContentLifecycleCallbacksMethod = new CompileMethod(this);\n    this.afterViewLifecycleCallbacksMethod = new CompileMethod(this);\n    this.destroyMethod = new CompileMethod(this);\n    this.detachMethod = new CompileMethod(this);\n\n    this.viewType = getViewType(component, viewIndex);\n    this.className = getViewClassName(component, viewIndex);\n    this.classType = o.importType(new CompileIdentifierMetadata({name: this.className}));\n    this.classExpr = o.variable(this.className);\n    if (this.viewType === ViewType.COMPONENT || this.viewType === ViewType.HOST) {\n      this.componentView = this;\n    } else {\n      this.componentView = this.declarationElement.view.componentView;\n    }\n    this.componentContext =\n        getPropertyInView(o.THIS_EXPR.prop('context'), this, this.componentView);\n\n    const viewQueries = new Map<any, CompileQuery[]>();\n    if (this.viewType === ViewType.COMPONENT) {\n      const directiveInstance = o.THIS_EXPR.prop('context');\n      this.component.viewQueries.forEach((queryMeta, queryIndex) => {\n        const propName = `_viewQuery_${queryMeta.selectors[0].name}_${queryIndex}`;\n        const queryList = createQueryList(queryMeta, directiveInstance, propName, this);\n        const query = new CompileQuery(queryMeta, queryList, directiveInstance, this);\n        addQueryToTokenMap(viewQueries, query);\n      });\n    }\n    this.viewQueries = viewQueries;\n    templateVariableBindings.forEach(\n        (entry) => { this.locals.set(entry[1], o.THIS_EXPR.prop('context').prop(entry[0])); });\n\n    if (!this.declarationElement.isNull()) {\n      this.declarationElement.setEmbeddedView(this);\n    }\n  }\n\n  callPipe(name: string, input: o.Expression, args: o.Expression[]): o.Expression {\n    return CompilePipe.call(this, name, [input].concat(args));\n  }\n\n  getLocal(name: string): o.Expression {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    let currView: CompileView = this;\n    let result = currView.locals.get(name);\n    while (!result && isPresent(currView.declarationElement.view)) {\n      currView = currView.declarationElement.view;\n      result = currView.locals.get(name);\n    }\n    if (isPresent(result)) {\n      return getPropertyInView(result, this, currView);\n    } else {\n      return null;\n    }\n  }\n\n  afterNodes() {\n    Array.from(this.viewQueries.values())\n        .forEach(\n            queries => queries.forEach(\n                q => q.afterChildren(this.createMethod, this.updateViewQueriesMethod)));\n  }\n}\n\nfunction getViewType(component: CompileDirectiveMetadata, embeddedTemplateIndex: number): ViewType {\n  if (embeddedTemplateIndex > 0) {\n    return ViewType.EMBEDDED;\n  }\n\n  if (component.type.isHost) {\n    return ViewType.HOST;\n  }\n\n  return ViewType.COMPONENT;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}