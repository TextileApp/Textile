{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompileIdentifierMetadata, CompileTokenMetadata} from '../compile_metadata';\nimport {createDiTokenExpression} from '../compiler_util/identifier_util';\nimport {isPresent} from '../facade/lang';\nimport {Identifiers, resolveIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {ViewType} from '../private_import_core';\n\nimport {CompileView} from './compile_view';\n\nexport function getPropertyInView(\n    property: o.Expression, callingView: CompileView, definedView: CompileView): o.Expression {\n  if (callingView === definedView) {\n    return property;\n  } else {\n    let viewProp: o.Expression = o.THIS_EXPR;\n    let currView: CompileView = callingView;\n    while (currView !== definedView && isPresent(currView.declarationElement.view)) {\n      currView = currView.declarationElement.view;\n      viewProp = viewProp.prop('parentView');\n    }\n    if (currView !== definedView) {\n      throw new Error(\n          `Internal error: Could not calculate a property in a parent view: ${property}`);\n    }\n    return property.visitExpression(new _ReplaceViewTransformer(viewProp, definedView), null);\n  }\n}\n\nclass _ReplaceViewTransformer extends o.ExpressionTransformer {\n  constructor(private _viewExpr: o.Expression, private _view: CompileView) { super(); }\n  private _isThis(expr: o.Expression): boolean {\n    return expr instanceof o.ReadVarExpr && expr.builtin === o.BuiltinVar.This;\n  }\n\n  visitReadVarExpr(ast: o.ReadVarExpr, context: any): any {\n    return this._isThis(ast) ? this._viewExpr : ast;\n  }\n  visitReadPropExpr(ast: o.ReadPropExpr, context: any): any {\n    if (this._isThis(ast.receiver)) {\n      // Note: Don't cast for members of the AppView base class...\n      if (this._view.fields.some((field) => field.name == ast.name) ||\n          this._view.getters.some((field) => field.name == ast.name)) {\n        return this._viewExpr.cast(this._view.classType).prop(ast.name);\n      }\n    }\n    return super.visitReadPropExpr(ast, context);\n  }\n}\n\nexport function injectFromViewParentInjector(\n    view: CompileView, token: CompileTokenMetadata, optional: boolean): o.Expression {\n  let viewExpr: o.Expression;\n  if (view.viewType === ViewType.HOST) {\n    viewExpr = o.THIS_EXPR;\n  } else {\n    viewExpr = o.THIS_EXPR.prop('parentView');\n  }\n  const args = [createDiTokenExpression(token), o.THIS_EXPR.prop('parentIndex')];\n  if (optional) {\n    args.push(o.NULL_EXPR);\n  }\n  return viewExpr.callMethod('injectorGet', args);\n}\n\nexport function getViewClassName(\n    component: CompileDirectiveSummary | CompileDirectiveMetadata,\n    embeddedTemplateIndex: number): string {\n  return `View_${component.type.name}${embeddedTemplateIndex}`;\n}\n\nexport function getHandleEventMethodName(elementIndex: number): string {\n  return `handleEvent_${elementIndex}`;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}