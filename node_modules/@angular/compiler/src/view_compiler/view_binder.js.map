{"version":3,"file":"view_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/view_binder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\n\nimport {CompileElement} from './compile_element';\nimport {CompileView} from './compile_view';\nimport {bindOutputs} from './event_binder';\nimport {bindDirectiveAfterContentLifecycleCallbacks, bindDirectiveAfterViewLifecycleCallbacks, bindDirectiveWrapperLifecycleCallbacks, bindInjectableDestroyLifecycleCallbacks, bindPipeDestroyLifecycleCallbacks} from './lifecycle_binder';\nimport {bindDirectiveHostProps, bindDirectiveInputs, bindRenderInputs, bindRenderText} from './property_binder';\n\nexport function bindView(\n    view: CompileView, parsedTemplate: TemplateAst[], schemaRegistry: ElementSchemaRegistry): void {\n  const visitor = new ViewBinderVisitor(view, schemaRegistry);\n  templateVisitAll(visitor, parsedTemplate);\n  view.pipes.forEach(\n      (pipe) => { bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view); });\n}\n\nclass ViewBinderVisitor implements TemplateAstVisitor {\n  private _nodeIndex: number = 0;\n\n  constructor(public view: CompileView, private _schemaRegistry: ElementSchemaRegistry) {}\n\n  visitBoundText(ast: BoundTextAst, parent: CompileElement): any {\n    const node = this.view.nodes[this._nodeIndex++];\n    bindRenderText(ast, node, this.view);\n    return null;\n  }\n  visitText(ast: TextAst, parent: CompileElement): any {\n    this._nodeIndex++;\n    return null;\n  }\n\n  visitNgContent(ast: NgContentAst, parent: CompileElement): any { return null; }\n\n  visitElement(ast: ElementAst, parent: CompileElement): any {\n    const compileElement = <CompileElement>this.view.nodes[this._nodeIndex++];\n    const hasEvents = bindOutputs(ast.outputs, ast.directives, compileElement, true);\n    bindRenderInputs(ast.inputs, hasEvents, compileElement);\n    ast.directives.forEach((directiveAst, dirIndex) => {\n      const directiveWrapperInstance =\n          compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n      bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n      bindDirectiveHostProps(\n          directiveAst, directiveWrapperInstance, compileElement, ast.name, this._schemaRegistry);\n    });\n    templateVisitAll(this, ast.children, compileElement);\n    // afterContent and afterView lifecycles need to be called bottom up\n    // so that children are notified before parents\n    ast.directives.forEach((directiveAst) => {\n      const directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n      const directiveWrapperInstance =\n          compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n      bindDirectiveAfterContentLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveAfterViewLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveWrapperLifecycleCallbacks(\n          directiveAst, directiveWrapperInstance, compileElement);\n    });\n    ast.providers.forEach((providerAst) => {\n      const providerInstance = compileElement.instances.get(providerAst.token.reference);\n      bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n    });\n    return null;\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, parent: CompileElement): any {\n    const compileElement = <CompileElement>this.view.nodes[this._nodeIndex++];\n    bindOutputs(ast.outputs, ast.directives, compileElement, false);\n    ast.directives.forEach((directiveAst, dirIndex) => {\n      const directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n      const directiveWrapperInstance =\n          compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n      bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n\n      bindDirectiveAfterContentLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveAfterViewLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveWrapperLifecycleCallbacks(\n          directiveAst, directiveWrapperInstance, compileElement);\n    });\n    ast.providers.forEach((providerAst) => {\n      const providerInstance = compileElement.instances.get(providerAst.token.reference);\n      bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n    });\n    bindView(compileElement.embeddedView, ast.children, this._schemaRegistry);\n    return null;\n  }\n\n  visitAttr(ast: AttrAst, ctx: any): any { return null; }\n  visitDirective(ast: DirectiveAst, ctx: any): any { return null; }\n  visitEvent(ast: BoundEventAst, eventTargetAndNames: Map<string, BoundEventAst>): any {\n    return null;\n  }\n\n  visitReference(ast: ReferenceAst, ctx: any): any { return null; }\n  visitVariable(ast: VariableAst, ctx: any): any { return null; }\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any { return null; }\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any { return null; }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}