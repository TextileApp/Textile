{"version":3,"file":"element_injector.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/linker/element_injector.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAC,QAAQ,EAAE,kBAAkB,EAAC,MAAM,gBAAgB;AAG3D,IAAM,UAAU,GAAG,IAAI,MAAM,EAAE,CAAC;AAEhC;IAAqC,mCAAQ;IAC3C,yBAAoB,KAAmB,EAAU,UAAkB;QAAI,iBAAO,CAAC;QAA3D,UAAK,GAAL,KAAK,CAAc;QAAU,eAAU,GAAV,UAAU,CAAQ;IAAa,CAAC;IAEjF,6BAAG,GAAH,UAAI,KAAU,EAAE,aAAuC;QAAvC,6BAAuC,GAAvC,kCAAuC;QACrD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IACvE,CAAC;IACH,sBAAC;AAAD,CAAC,AAND,CAAqC,QAAQ,GAM5C","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from '../di/injector';\nimport {AppView} from './view';\n\nconst _UNDEFINED = new Object();\n\nexport class ElementInjector extends Injector {\n  constructor(private _view: AppView<any>, private _nodeIndex: number) { super(); }\n\n  get(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._view.injectorGet(token, this._nodeIndex, notFoundValue);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}