{"version":3,"file":"view.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/linker/view.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, ChangeDetectorStatus} from '../change_detection/change_detection';\nimport {Injector, THROW_IF_NOT_FOUND} from '../di/injector';\nimport {ListWrapper} from '../facade/collection';\nimport {isPresent} from '../facade/lang';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from '../profile/profile';\nimport {DirectRenderer, RenderComponentType, RenderDebugInfo, Renderer} from '../render/api';\n\nimport {AnimationViewContext} from './animation_view_context';\nimport {ComponentRef} from './component_factory';\nimport {DebugContext, StaticNodeDebugInfo} from './debug_context';\nimport {ElementInjector} from './element_injector';\nimport {ExpressionChangedAfterItHasBeenCheckedError, ViewDestroyedError, ViewWrappedError} from './errors';\nimport {ViewContainer} from './view_container';\nimport {ViewRef_} from './view_ref';\nimport {ViewType} from './view_type';\nimport {ViewUtils, addToArray} from './view_utils';\n\nconst _scope_check: WtfScopeFn = wtfCreateScope(`AppView#check(ascii id)`);\n\n/**\n * @experimental\n */\nconst EMPTY_CONTEXT = new Object();\n\nconst UNDEFINED = new Object();\n\n/**\n * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n *\n */\nexport abstract class AppView<T> {\n  ref: ViewRef_<T>;\n  lastRootNode: any;\n  allNodes: any[];\n  disposables: Function[];\n  viewContainer: ViewContainer = null;\n\n  numberOfChecks: number = 0;\n\n  renderer: Renderer;\n\n  private _hasExternalHostElement: boolean;\n  private _hostInjector: Injector;\n  private _hostProjectableNodes: any[][];\n  private _animationContext: AnimationViewContext;\n  private _directRenderer: DirectRenderer;\n\n  public context: T;\n\n  constructor(\n      public clazz: any, public componentType: RenderComponentType, public type: ViewType,\n      public viewUtils: ViewUtils, public parentView: AppView<any>, public parentIndex: number,\n      public parentElement: any, public cdMode: ChangeDetectorStatus,\n      public declaredViewContainer: ViewContainer = null) {\n    this.ref = new ViewRef_(this);\n    if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n      this.renderer = viewUtils.renderComponent(componentType);\n    } else {\n      this.renderer = parentView.renderer;\n    }\n    this._directRenderer = (this.renderer as any).directRenderer;\n  }\n\n  get animationContext(): AnimationViewContext {\n    if (!this._animationContext) {\n      this._animationContext = new AnimationViewContext();\n    }\n    return this._animationContext;\n  }\n\n  get destroyed(): boolean { return this.cdMode === ChangeDetectorStatus.Destroyed; }\n\n  create(context: T) {\n    this.context = context;\n    return this.createInternal(null);\n  }\n\n  createHostView(rootSelectorOrNode: string|any, hostInjector: Injector, projectableNodes: any[][]):\n      ComponentRef<any> {\n    this.context = <any>EMPTY_CONTEXT;\n    this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n    this._hostInjector = hostInjector;\n    this._hostProjectableNodes = projectableNodes;\n    return this.createInternal(rootSelectorOrNode);\n  }\n\n  /**\n   * Overwritten by implementations.\n   * Returns the ComponentRef for the host element for ViewType.HOST.\n   */\n  createInternal(rootSelectorOrNode: string|any): ComponentRef<any> { return null; }\n\n  /**\n   * Overwritten by implementations.\n   */\n  createEmbeddedViewInternal(templateNodeIndex: number): AppView<any> { return null; }\n\n  init(lastRootNode: any, allNodes: any[], disposables: Function[]) {\n    this.lastRootNode = lastRootNode;\n    this.allNodes = allNodes;\n    this.disposables = disposables;\n    if (this.type === ViewType.COMPONENT) {\n      this.dirtyParentQueriesInternal();\n    }\n  }\n\n  injectorGet(token: any, nodeIndex: number, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    let result = UNDEFINED;\n    let view: AppView<any> = this;\n    while (result === UNDEFINED) {\n      if (isPresent(nodeIndex)) {\n        result = view.injectorGetInternal(token, nodeIndex, UNDEFINED);\n      }\n      if (result === UNDEFINED && view.type === ViewType.HOST) {\n        result = view._hostInjector.get(token, notFoundValue);\n      }\n      nodeIndex = view.parentIndex;\n      view = view.parentView;\n    }\n    return result;\n  }\n\n  /**\n   * Overwritten by implementations\n   */\n  injectorGetInternal(token: any, nodeIndex: number, notFoundResult: any): any {\n    return notFoundResult;\n  }\n\n  injector(nodeIndex: number): Injector { return new ElementInjector(this, nodeIndex); }\n\n  detachAndDestroy() {\n    if (this._hasExternalHostElement) {\n      this.detach();\n    } else if (isPresent(this.viewContainer)) {\n      this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));\n    }\n    this.destroy();\n  }\n\n  destroy() {\n    if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n      return;\n    }\n    const hostElement = this.type === ViewType.COMPONENT ? this.parentElement : null;\n    if (this.disposables) {\n      for (let i = 0; i < this.disposables.length; i++) {\n        this.disposables[i]();\n      }\n    }\n    this.destroyInternal();\n    this.dirtyParentQueriesInternal();\n\n    if (this._animationContext) {\n      this._animationContext.onAllActiveAnimationsDone(\n          () => this.renderer.destroyView(hostElement, this.allNodes));\n    } else {\n      this.renderer.destroyView(hostElement, this.allNodes);\n    }\n\n    this.cdMode = ChangeDetectorStatus.Destroyed;\n  }\n\n  /**\n   * Overwritten by implementations\n   */\n  destroyInternal(): void {}\n\n  /**\n   * Overwritten by implementations\n   */\n  detachInternal(): void {}\n\n  detach(): void {\n    this.detachInternal();\n    if (this._animationContext) {\n      this._animationContext.onAllActiveAnimationsDone(() => this._renderDetach());\n    } else {\n      this._renderDetach();\n    }\n    if (this.declaredViewContainer && this.declaredViewContainer !== this.viewContainer) {\n      const projectedViews = this.declaredViewContainer.projectedViews;\n      const index = projectedViews.indexOf(this);\n      // perf: pop is faster than splice!\n      if (index >= projectedViews.length - 1) {\n        projectedViews.pop();\n      } else {\n        projectedViews.splice(index, 1);\n      }\n    }\n    this.viewContainer = null;\n    this.dirtyParentQueriesInternal();\n  }\n\n  private _renderDetach() {\n    if (this._directRenderer) {\n      this.visitRootNodesInternal(this._directRenderer.remove, null);\n    } else {\n      this.renderer.detachView(this.flatRootNodes);\n    }\n  }\n\n  attachAfter(viewContainer: ViewContainer, prevView: AppView<any>) {\n    this._renderAttach(viewContainer, prevView);\n    this.viewContainer = viewContainer;\n    if (this.declaredViewContainer && this.declaredViewContainer !== viewContainer) {\n      if (!this.declaredViewContainer.projectedViews) {\n        this.declaredViewContainer.projectedViews = [];\n      }\n      this.declaredViewContainer.projectedViews.push(this);\n    }\n    this.dirtyParentQueriesInternal();\n  }\n\n  moveAfter(viewContainer: ViewContainer, prevView: AppView<any>) {\n    this._renderAttach(viewContainer, prevView);\n    this.dirtyParentQueriesInternal();\n  }\n\n  private _renderAttach(viewContainer: ViewContainer, prevView: AppView<any>) {\n    const prevNode = prevView ? prevView.lastRootNode : viewContainer.nativeElement;\n    if (this._directRenderer) {\n      const nextSibling = this._directRenderer.nextSibling(prevNode);\n      if (nextSibling) {\n        this.visitRootNodesInternal(this._directRenderer.insertBefore, nextSibling);\n      } else {\n        const parentElement = this._directRenderer.parentElement(prevNode);\n        if (parentElement) {\n          this.visitRootNodesInternal(this._directRenderer.appendChild, parentElement);\n        }\n      }\n    } else {\n      this.renderer.attachViewAfter(prevNode, this.flatRootNodes);\n    }\n  }\n\n  get changeDetectorRef(): ChangeDetectorRef { return this.ref; }\n\n  get flatRootNodes(): any[] {\n    const nodes: any[] = [];\n    this.visitRootNodesInternal(addToArray, nodes);\n    return nodes;\n  }\n\n  projectNodes(parentElement: any, ngContentIndex: number) {\n    if (this._directRenderer) {\n      this.visitProjectedNodes(ngContentIndex, this._directRenderer.appendChild, parentElement);\n    } else {\n      const nodes: any[] = [];\n      this.visitProjectedNodes(ngContentIndex, addToArray, nodes);\n      this.renderer.projectNodes(parentElement, nodes);\n    }\n  }\n\n  visitProjectedNodes<C>(ngContentIndex: number, cb: (node: any, ctx: C) => void, c: C): void {\n    switch (this.type) {\n      case ViewType.EMBEDDED:\n        this.parentView.visitProjectedNodes(ngContentIndex, cb, c);\n        break;\n      case ViewType.COMPONENT:\n        if (this.parentView.type === ViewType.HOST) {\n          const nodes = this.parentView._hostProjectableNodes[ngContentIndex] || [];\n          for (let i = 0; i < nodes.length; i++) {\n            cb(nodes[i], c);\n          }\n        } else {\n          this.parentView.visitProjectableNodesInternal(this.parentIndex, ngContentIndex, cb, c);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Overwritten by implementations\n   */\n  visitRootNodesInternal<C>(cb: (node: any, ctx: C) => void, c: C): void {}\n\n  /**\n   * Overwritten by implementations\n   */\n  visitProjectableNodesInternal<C>(\n      nodeIndex: number, ngContentIndex: number, cb: (node: any, ctx: C) => void, c: C): void {}\n\n  /**\n   * Overwritten by implementations\n   */\n  dirtyParentQueriesInternal(): void {}\n\n  detectChanges(throwOnChange: boolean): void {\n    const s = _scope_check(this.clazz);\n    if (this.cdMode === ChangeDetectorStatus.Checked ||\n        this.cdMode === ChangeDetectorStatus.Errored ||\n        this.cdMode === ChangeDetectorStatus.Detached)\n      return;\n    if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n      this.throwDestroyedError('detectChanges');\n    }\n    this.detectChangesInternal(throwOnChange);\n    if (this.cdMode === ChangeDetectorStatus.CheckOnce) this.cdMode = ChangeDetectorStatus.Checked;\n\n    this.numberOfChecks++;\n    wtfLeave(s);\n  }\n\n  /**\n   * Overwritten by implementations\n   */\n  detectChangesInternal(throwOnChange: boolean): void {}\n\n  markAsCheckOnce(): void { this.cdMode = ChangeDetectorStatus.CheckOnce; }\n\n  markPathToRootAsCheckOnce(): void {\n    let c: AppView<any> = this;\n    while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n      if (c.cdMode === ChangeDetectorStatus.Checked) {\n        c.cdMode = ChangeDetectorStatus.CheckOnce;\n      }\n      if (c.type === ViewType.COMPONENT) {\n        c = c.parentView;\n      } else {\n        c = c.viewContainer ? c.viewContainer.parentView : null;\n      }\n    }\n  }\n\n  eventHandler<E, R>(cb: (eventName: string, event?: E) => R): (eventName: string, event?: E) => R {\n    return cb;\n  }\n\n  throwDestroyedError(details: string): void { throw new ViewDestroyedError(details); }\n}\n\nexport class DebugAppView<T> extends AppView<T> {\n  private _currentDebugContext: DebugContext = null;\n\n  constructor(\n      clazz: any, componentType: RenderComponentType, type: ViewType, viewUtils: ViewUtils,\n      parentView: AppView<any>, parentIndex: number, parentNode: any, cdMode: ChangeDetectorStatus,\n      public staticNodeDebugInfos: StaticNodeDebugInfo[],\n      declaredViewContainer: ViewContainer = null) {\n    super(\n        clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode,\n        declaredViewContainer);\n  }\n\n  create(context: T) {\n    this._resetDebug();\n    try {\n      return super.create(context);\n    } catch (e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n\n  createHostView(\n      rootSelectorOrNode: string|any, injector: Injector,\n      projectableNodes: any[][] = null): ComponentRef<any> {\n    this._resetDebug();\n    try {\n      return super.createHostView(rootSelectorOrNode, injector, projectableNodes);\n    } catch (e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n\n  injectorGet(token: any, nodeIndex: number, notFoundResult?: any): any {\n    this._resetDebug();\n    try {\n      return super.injectorGet(token, nodeIndex, notFoundResult);\n    } catch (e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n\n  detach(): void {\n    this._resetDebug();\n    try {\n      super.detach();\n    } catch (e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n\n  destroy() {\n    this._resetDebug();\n    try {\n      super.destroy();\n    } catch (e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n\n  detectChanges(throwOnChange: boolean): void {\n    this._resetDebug();\n    try {\n      super.detectChanges(throwOnChange);\n    } catch (e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n\n  private _resetDebug() { this._currentDebugContext = null; }\n\n  debug(nodeIndex: number, rowNum: number, colNum: number): DebugContext {\n    return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n  }\n\n  private _rethrowWithContext(e: any) {\n    if (!(e instanceof ViewWrappedError)) {\n      if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n        this.cdMode = ChangeDetectorStatus.Errored;\n      }\n      if (isPresent(this._currentDebugContext)) {\n        throw new ViewWrappedError(e, this._currentDebugContext);\n      }\n    }\n  }\n\n  eventHandler<E, R>(cb: (eventName: string, event?: E) => R): (eventName: string, event?: E) => R {\n    const superHandler = super.eventHandler(cb);\n    return (eventName: string, event?: any) => {\n      this._resetDebug();\n      try {\n        return superHandler.call(this, eventName, event);\n      } catch (e) {\n        this._rethrowWithContext(e);\n        throw e;\n      }\n    };\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}