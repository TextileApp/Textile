{"version":3,"file":"dom_events.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/dom/events/dom_events.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAC,UAAU,EAAC,MAAM,eAAe;OACjC,EAAC,kBAAkB,EAAC,MAAM,iBAAiB;AAGlD;IAAqC,mCAAkB;IAAvD;QAAqC,8BAAkB;IAevD,CAAC;IAdC,8EAA8E;IAC9E,UAAU;IACV,kCAAQ,GAAR,UAAS,SAAiB,IAAa,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAErD,0CAAgB,GAAhB,UAAiB,OAAoB,EAAE,SAAiB,EAAE,OAAiB;QACzE,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAc,EAAE,KAAK,CAAC,CAAC;QAC3D,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,OAAc,EAAE,KAAK,CAAC,EAA7D,CAA6D,CAAC;IAC7E,CAAC;IACI,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,8BAAc,GAA6D,EACjF,CAAC;IACF,sBAAC;AAAD,CAAC,AAfD,CAAqC,kBAAkB,GAetD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {EventManagerPlugin} from './event_manager';\n\n\nexport class DomEventsPlugin extends EventManagerPlugin {\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean { return true; }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, handler as any, false);\n    return () => element.removeEventListener(eventName, handler as any, false);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}