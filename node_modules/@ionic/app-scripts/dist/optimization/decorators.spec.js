"use strict";
var decorators = require('./decorators');
var Constants = require('../util/constants');
var entryPoint = '/Users/dan/Dev/myApp3/node_modules/ionic-angular/index.js';
var originalEnv = {};
describe('optimization', function () {
    describe('purgeDecoratorStatements', function () {
        beforeEach(function () {
            originalEnv = process.env;
            process.env[Constants.ENV_VAR_IONIC_ANGULAR_ENTRY_POINT] = entryPoint;
        });
        afterEach(function () {
            process.env = originalEnv;
        });
        it('should comment out the decorator statement', function () {
            // arrange
            var decoratorStatement = "\n      IonicModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BrowserModule, HttpModule, FormsModule, ReactiveFormsModule],\n                exports: [\n                    BrowserModule,\n                    HttpModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    Avatar,\n                    Backdrop,\n                    Badge,\n                    Button,\n                    Card,\n                    CardContent,\n                    CardHeader,\n                    CardTitle,\n                    Checkbox,\n                    Chip,\n                    ClickBlock,\n                    Col,\n                    Content,\n                    // DateTime,\n                    FabContainer,\n                    FabButton,\n                    FabList,\n                    Footer,\n                    Grid,\n                    Header,\n                    HideWhen,\n                    Icon,\n                    Img,\n                    InfiniteScroll,\n                    InfiniteScrollContent,\n                    IonicApp,\n                    Item,\n                    ItemContent,\n                    ItemDivider,\n                    ItemGroup,\n                    ItemOptions,\n                    ItemReorder,\n                    ItemSliding,\n                    Label,\n                    List,\n                    ListHeader,\n                    Menu,\n                    MenuClose,\n                    MenuToggle,\n                    NativeInput,\n                    Nav,\n                    Navbar,\n                    NavPop,\n                    NavPopAnchor,\n                    NavPush,\n                    NavPushAnchor,\n                    NextInput,\n                    Note,\n                    Option,\n                    OverlayPortal,\n                    PickerColumnCmp,\n                    RadioButton,\n                    RadioGroup,\n                    Range,\n                    RangeKnob,\n                    Refresher,\n                    RefresherContent,\n                    Reorder,\n                    Row,\n                    Scroll,\n                    Searchbar,\n                    Segment,\n                    SegmentButton,\n                    // Select,\n                    ShowWhen,\n                    Slide,\n                    Slides,\n                    Spinner,\n                    Tab,\n                    Tabs,\n                    TabButton,\n                    TabHighlight,\n                    TextInput,\n                    Thumbnail,\n                    Toggle,\n                    Toolbar,\n                    ToolbarItem,\n                    ToolbarTitle,\n                    Typography,\n                    VirtualFooter,\n                    VirtualHeader,\n                    VirtualItem,\n                    VirtualScroll,\n                ],\n                declarations: [\n                    ActionSheetCmp,\n                    AlertCmp,\n                    ClickBlock,\n                    LoadingCmp,\n                    ModalCmp,\n                    PickerCmp,\n                    PopoverCmp,\n                    ToastCmp,\n                    Avatar,\n                    Backdrop,\n                    Badge,\n                    Button,\n                    Card,\n                    CardContent,\n                    CardHeader,\n                    CardTitle,\n                    Checkbox,\n                    Chip,\n                    ClickBlock,\n                    Col,\n                    Content,\n                    // DateTime,\n                    FabContainer,\n                    FabButton,\n                    FabList,\n                    Footer,\n                    Grid,\n                    Header,\n                    HideWhen,\n                    Icon,\n                    Img,\n                    InfiniteScroll,\n                    InfiniteScrollContent,\n                    IonicApp,\n                    Item,\n                    ItemContent,\n                    ItemDivider,\n                    ItemGroup,\n                    ItemOptions,\n                    ItemReorder,\n                    ItemSliding,\n                    Label,\n                    List,\n                    ListHeader,\n                    Menu,\n                    MenuClose,\n                    MenuToggle,\n                    NativeInput,\n                    Nav,\n                    Navbar,\n                    NavPop,\n                    NavPopAnchor,\n                    NavPush,\n                    NavPushAnchor,\n                    NextInput,\n                    Note,\n                    Option,\n                    OverlayPortal,\n                    PickerColumnCmp,\n                    RadioButton,\n                    RadioGroup,\n                    Range,\n                    RangeKnob,\n                    Refresher,\n                    RefresherContent,\n                    Reorder,\n                    Row,\n                    Scroll,\n                    Searchbar,\n                    Segment,\n                    SegmentButton,\n                    // Select,\n                    ShowWhen,\n                    Slide,\n                    Slides,\n                    Spinner,\n                    Tab,\n                    Tabs,\n                    TabButton,\n                    TabHighlight,\n                    TextInput,\n                    Thumbnail,\n                    Toggle,\n                    Toolbar,\n                    ToolbarItem,\n                    ToolbarTitle,\n                    Typography,\n                    VirtualFooter,\n                    VirtualHeader,\n                    VirtualItem,\n                    VirtualScroll,\n                ],\n                entryComponents: []\n            },] },\n];\n      ";
            var additionalGeneratedContent = "\n      /** @nocollapse */\nIonicModule.ctorParameters = () => [];\nfunction IonicModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IonicModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    IonicModule.ctorParameters;\n}\n** @nocollapse */\nLazyModule.ctorParameters = () => [];\nfunction LazyModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LazyModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    LazyModule.ctorParameters;\n}\n      ";
            var knownContent = "\n      some various content\n" + decoratorStatement + "\n" + additionalGeneratedContent + "\n\nsome more content\n      ";
            // act
            var result = decorators.purgeDecorators(entryPoint, knownContent);
            // assert
            expect(result).not.toEqual(knownContent);
            var regex = decorators.getDecoratorRegex();
            var matches = regex.exec(result);
            expect(matches).toBeTruthy();
            expect(result.indexOf("/*" + matches[0] + "*/")).toBeGreaterThan(0);
            expect(result.indexOf(additionalGeneratedContent)).toBeGreaterThan(-1);
        });
    });
});
