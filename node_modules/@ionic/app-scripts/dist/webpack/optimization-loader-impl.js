"use strict";
var path_1 = require('path');
var helpers_1 = require('../util/helpers');
var logger_1 = require('../logger/logger');
/* This loader is purely for caching stuff */
function optimizationLoader(source, map, webpackContex) {
    webpackContex.cacheable();
    var callback = webpackContex.async();
    var absolutePath = path_1.resolve(path_1.normalize(webpackContex.resourcePath));
    logger_1.Logger.debug("[Webpack] optimization: processing the following file: " + absolutePath);
    return helpers_1.readAndCacheFile(absolutePath).then(function (fileContent) {
        callback(null, source, map);
    }).catch(function (err) {
        logger_1.Logger.debug("[Webpack] optimization: Encountered an unexpected error: " + err.message);
        callback(err);
    });
}
exports.optimizationLoader = optimizationLoader;
