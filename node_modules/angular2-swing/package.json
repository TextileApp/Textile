{
  "_args": [
    [
      {
        "raw": "angular2-swing@^0.10.0",
        "scope": null,
        "escapedName": "angular2-swing",
        "name": "angular2-swing",
        "rawSpec": "^0.10.0",
        "spec": ">=0.10.0 <0.11.0",
        "type": "range"
      },
      "/Users/Matthew/Textile"
    ]
  ],
  "_from": "angular2-swing@>=0.10.0 <0.11.0",
  "_id": "angular2-swing@0.10.0",
  "_inCache": true,
  "_location": "/angular2-swing",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/angular2-swing-0.10.0.tgz_1476210906431_0.7821403220295906"
  },
  "_npmUser": {
    "name": "ksachdeva",
    "email": "ksachdeva17@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular2-swing@^0.10.0",
    "scope": null,
    "escapedName": "angular2-swing",
    "name": "angular2-swing",
    "rawSpec": "^0.10.0",
    "spec": ">=0.10.0 <0.11.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular2-swing/-/angular2-swing-0.10.0.tgz",
  "_shasum": "735469ecc80bc02cab36ecf2bac4db05ae6f3a25",
  "_shrinkwrap": null,
  "_spec": "angular2-swing@^0.10.0",
  "_where": "/Users/Matthew/Textile",
  "author": {
    "name": "Kapil Sachdeva",
    "email": "ksachdeva17@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/ksachdeva/angular2-swing/issues"
  },
  "dependencies": {
    "swing": "^3.0.3"
  },
  "description": "Angular 2 Component for Swing (Tinder style cards)",
  "devDependencies": {
    "@angular/common": "^2.0.2",
    "@angular/core": "^2.0.2",
    "angular-cli": "^1.0.0-beta.17",
    "core-js": "^2.4.1",
    "reflect-metadata": "^0.1.3",
    "rxjs": "5.0.0-beta.12",
    "zone.js": "^0.6.23"
  },
  "directories": {},
  "dist": {
    "shasum": "735469ecc80bc02cab36ecf2bac4db05ae6f3a25",
    "tarball": "https://registry.npmjs.org/angular2-swing/-/angular2-swing-0.10.0.tgz"
  },
  "gitHead": "58d0bac07fc3af8051e812ccd0e99f0c8e5fa486",
  "homepage": "https://github.com/ksachdeva/angular2-swing#readme",
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "ksachdeva",
      "email": "ksachdeva17@gmail.com"
    }
  ],
  "name": "angular2-swing",
  "optionalDependencies": {},
  "readme": "# angular2-swing\n\n# Build package\n\n`npm run build`\n\ndont forget `typings install`\n\n# Install\nnpm install angular2-swing --save\n\n# Usage\n```JavaScript\nimport {Component, ViewChild, ViewChildren, QueryList} from '@angular/core';\n\nimport {\n  StackConfig,\n  Stack,\n  Card,\n  ThrowEvent,\n  DragEvent,\n  SwingStackComponent,\n  SwingCardComponent} from 'angular2-swing';\n\n@Component({\n  selector: 'app',\n  template: `\n    <div id=\"viewport\">\n      <ul class=\"stack\" swing-stack  [stackConfig]=\"stackConfig\"  #myswing1 (throwout)=\"onThrowOut($event)\">\n        <li swing-card #mycards1 [ngClass]=\"c.name\" *ngFor=\"let c of cards\">{{ c.symbol }}</li>\n      </ul>\n    </div>\n    <div id=\"source\">\n        <p>Drag the playing cards out of the stack and let go. Dragging them\n          beyond the desk will throw them out of the stack. If you drag too\n          little and let go, the cards will spring back into place. You can\n          throw cards back into the stack after you have thrown them out.</p>\n        <p>Open the <a href=\"https://developer.chrome.com/devtools/docs/console\">\n          Console</a> to view the associated events.<p>\n        <p>Demonstration of <a href=\"https://github.com/ksachdeva/angular2-swing\">\n          https://github.com/ksachdeva/angular2-swing</a> implementation.</p>\n    </div>\n\n  `\n})\nexport class AppComponent {\n\n  @ViewChild('myswing1') swingStack: SwingStackComponent;\n  @ViewChildren('mycards1') swingCards: QueryList<SwingCardComponent>;\n\n  cards: Array<any>;\n  stackConfig: StackConfig;\n\n  constructor() {\n\n    this.stackConfig = {\n      throwOutConfidence: (offset: number, targetElement: HTMLElement) => {\n        // you would put ur logic based on offset & targetelement to determine\n        // what is your throwout confidence\n        return 1;\n      },\n      minThrowOutDistance: 700    // default value is 400\n    };\n\n    this.cards = [\n      { name: 'clubs', symbol: '♣' },\n      { name: 'diamonds', symbol: '♦' },\n      { name: 'spades', symbol: '♠' }\n    ];\n  }\n\n  ngAfterViewInit() {\n    // ViewChild & ViewChildren are only available\n    // in this function\n\n    console.log(this.swingStack); // this is the stack\n    console.log(this.swingCards); // this is a list of cards\n\n    // we can get the underlying stack\n    // which has methods - createCard, destroyCard, getCard etc\n    console.log(this.swingStack.stack);\n\n    // and the cards\n    // every card has methods - destroy, throwIn, throwOut etc\n    this.swingCards.forEach((c) => console.log(c.getCard()));\n\n    // this is how you can manually hook up to the\n    // events instead of providing the event method in the template\n    this.swingStack.throwoutleft.subscribe(\n      (event: ThrowEvent) => console.log('Manual hook: ', event));\n\n    this.swingStack.dragstart.subscribe((event: DragEvent) => console.log(event));\n\n    this.swingStack.dragmove.subscribe((event: DragEvent) => console.log(event));\n  }\n\n  // This method is called by hooking up the event\n  // on the HTML element - see the template above\n  onThrowOut(event: ThrowEvent) {\n    console.log('Hook from the template', event.throwDirection);\n  }\n}\n\n```\n\nSee [angular2-swing-example](https://github.com/ksachdeva/angular2-swing-example) repository for the full example\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ksachdeva/angular2-swing.git"
  },
  "scripts": {
    "build": "npm run clean && npm run build-app",
    "build-app": "ngc",
    "clean": "rm -rf ./dist && rm -rf ./aot"
  },
  "typings": "dist/index.d.ts",
  "version": "0.10.0"
}
