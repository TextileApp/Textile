{"version":3,"file":"firebase_list_factory.js","sourceRoot":"","sources":["../../src/database/firebase_list_factory.ts"],"names":[],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\nimport { AFUnwrappedDataSnapshot } from '../interfaces';\nimport { FirebaseListObservable } from './firebase_list_observable';\nimport { Observer } from 'rxjs/Observer';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { observeQuery } from './query_observable';\nimport { Query, FirebaseListFactoryOpts } from '../interfaces';\nimport * as utils from '../utils';\nimport { mergeMap } from 'rxjs/operator/mergeMap';\nimport { map } from 'rxjs/operator/map';\n\nexport function FirebaseListFactory (\n  absoluteUrlOrDbRef:string |\n  firebase.database.Reference |\n  firebase.database.Query,\n  {preserveSnapshot, query = {}}:FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\n\n  let ref: firebase.database.Reference | firebase.database.Query;\n\n  utils.checkForUrlOrFirebaseRef(absoluteUrlOrDbRef, {\n    isUrl: () => ref = firebase.database().refFromURL(<string>absoluteUrlOrDbRef),\n    isRef: () => ref = <firebase.database.Reference>absoluteUrlOrDbRef,\n    isQuery: () => ref = <firebase.database.Query>absoluteUrlOrDbRef,\n  });\n\n  // if it's just a reference or string, create a regular list observable\n  if ((utils.isFirebaseRef(absoluteUrlOrDbRef) ||\n       utils.isString(absoluteUrlOrDbRef)) &&\n       utils.isEmptyObject(query)) {\n    return firebaseListObservable(ref, { preserveSnapshot });\n  }\n\n  const queryObs = observeQuery(query);\n  return new FirebaseListObservable(ref, subscriber => {\n    let sub = mergeMap.call(map.call(queryObs, query => {\n      let queried: firebase.database.Query = ref;\n      // Only apply the populated keys\n      // apply ordering and available querying options\n      // eg: ref.orderByChild('height').startAt(3)\n      // Check orderBy\n      if (query.orderByChild) {\n        queried = queried.orderByChild(query.orderByChild);\n      } else if (query.orderByKey) {\n        queried = queried.orderByKey();\n      } else if (query.orderByPriority) {\n        queried = queried.orderByPriority();\n      } else if (query.orderByValue) {\n        queried = queried.orderByValue();\n      }\n\n      // check equalTo\n      if (utils.hasKey(query, \"equalTo\")) {\n        queried = queried.equalTo(query.equalTo);\n\n        if (utils.hasKey(query, \"startAt\") || utils.hasKey(query, \"endAt\")) {\n          throw new Error('Query Error: Cannot use startAt or endAt with equalTo.');\n        }\n\n        // apply limitTos\n        if (!utils.isNil(query.limitToFirst)) {\n          queried = queried.limitToFirst(query.limitToFirst);\n        }\n\n        if (!utils.isNil(query.limitToLast)) {\n          queried = queried.limitToLast(query.limitToLast);\n        }\n\n        return queried;\n      }\n\n      // check startAt\n      if (utils.hasKey(query, \"startAt\")) {\n          queried = queried.startAt(query.startAt);\n      }\n\n      if (utils.hasKey(query, \"endAt\")) {\n          queried = queried.endAt(query.endAt);\n      }\n\n      if (!utils.isNil(query.limitToFirst) && query.limitToLast) {\n        throw new Error('Query Error: Cannot use limitToFirst with limitToLast.');\n      }\n\n      // apply limitTos\n      if (!utils.isNil(query.limitToFirst)) {\n          queried = queried.limitToFirst(query.limitToFirst);\n      }\n\n      if (!utils.isNil(query.limitToLast)) {\n          queried = queried.limitToLast(query.limitToLast);\n      }\n\n      return queried;\n    }), (queryRef: firebase.database.Reference, ix: number) => {\n      return firebaseListObservable(queryRef, { preserveSnapshot });\n    })\n    .subscribe(subscriber);\n\n    return () => sub.unsubscribe();\n  });\n}\n\n/**\n * Creates a FirebaseListObservable from a reference or query. Options can be provided as a second parameter.\n * This function understands the nuances of the Firebase SDK event ordering and other quirks. This function\n * takes into account that not all .on() callbacks are guaranteed to be asynchonous. It creates a initial array\n * from a promise of ref.once('value'), and then starts listening to child events. When the initial array\n * is loaded, the observable starts emitting values.\n */\nfunction firebaseListObservable(ref: firebase.database.Reference | firebase.database.Query, {preserveSnapshot}: FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\n  // Keep track of callback handles for calling ref.off(event, handle)\n  const handles = [];\n  const listObs = new FirebaseListObservable(ref, (obs: Observer<any[]>) => {\n    ref.once('value')\n      .then((snap) => {\n        let initialArray = [];\n        snap.forEach(child => {\n          initialArray.push(child)\n        });\n        return initialArray;\n      })\n      .then((initialArray) => {\n        const isInitiallyEmpty = initialArray.length === 0;\n        let hasInitialLoad = false;\n        let lastKey;\n\n        if (!isInitiallyEmpty) {\n          // The last key in the initial array tells us where\n          // to begin listening in realtime\n          lastKey = initialArray[initialArray.length - 1].key;\n        }\n\n        const addFn = ref.on('child_added', (child: any, prevKey: string) => {\n          // If the initial load has not been set and the current key is\n          // the last key of the initialArray, we know we have hit the\n          // initial load\n          if (!isInitiallyEmpty) {\n            if (child.key === lastKey) {\n              hasInitialLoad = true;\n              obs.next(preserveSnapshot ? initialArray : initialArray.map(utils.unwrapMapFn));\n              return;\n            }\n          }\n\n          if (hasInitialLoad) {\n            initialArray = onChildAdded(initialArray, child, prevKey);\n          }\n\n          // only emit the array after the initial load\n          if (hasInitialLoad) {\n            obs.next(preserveSnapshot ? initialArray : initialArray.map(utils.unwrapMapFn));\n          }\n        }, err => {\n          if (err) { obs.error(err); obs.complete(); }\n        });\n\n        handles.push({ event: 'child_added', handle: addFn });\n\n        let remFn = ref.on('child_removed', (child: any) => {\n          initialArray = onChildRemoved(initialArray, child)\n          if (hasInitialLoad) {\n            obs.next(preserveSnapshot ? initialArray : initialArray.map(utils.unwrapMapFn));\n          }\n        }, err => {\n          if (err) { obs.error(err); obs.complete(); }\n        });\n        handles.push({ event: 'child_removed', handle: remFn });\n\n        let chgFn = ref.on('child_changed', (child: any, prevKey: string) => {\n          initialArray = onChildChanged(initialArray, child, prevKey)\n          if (hasInitialLoad) {\n            // This also manages when the only change is prevKey change\n            obs.next(preserveSnapshot ? initialArray : initialArray.map(utils.unwrapMapFn));\n          }\n        }, err => {\n          if (err) { obs.error(err); obs.complete(); }\n        });\n        handles.push({ event: 'child_changed', handle: chgFn });\n\n        // If empty emit the array\n        if (isInitiallyEmpty) {\n          obs.next(initialArray);\n          hasInitialLoad = true;\n        }\n      });\n\n    return () => {\n      // Loop through callback handles and dispose of each event with handle\n      // The Firebase SDK requires the reference, event name, and callback to\n      // properly unsubscribe, otherwise it can affect other subscriptions.\n      handles.forEach(item => {\n        ref.off(item.event, item.handle);\n      });\n    };\n\n  });\n\n  // TODO: should be in the subscription zone instead\n  return observeOn.call(listObs, new utils.ZoneScheduler(Zone.current));\n}\n\nexport function onChildAdded(arr:any[], child:any, prevKey:string): any[] {\n  if (!arr.length) {\n    return [child];\n  }\n\n  return arr.reduce((accumulator:firebase.database.DataSnapshot[], curr:firebase.database.DataSnapshot, i:number) => {\n    if (!prevKey && i===0) {\n      accumulator.push(child);\n    }\n    accumulator.push(curr);\n    if (prevKey && prevKey === curr.key) {\n      accumulator.push(child);\n    }\n    return accumulator;\n  }, []);\n}\n\nexport function onChildChanged(arr:any[], child:any, prevKey:string): any[] {\n  return arr.reduce((accumulator:any[], val:any, i:number) => {\n    if (!prevKey && i==0) {\n      accumulator.push(child);\n      if (val.key !== child.key) {\n        accumulator.push(val);\n      }\n    } else if(val.key === prevKey) {\n      accumulator.push(val);\n      accumulator.push(child);\n    } else if (val.key !== child.key) {\n      accumulator.push(val);\n    }\n    return accumulator;\n  }, []);\n}\n\nexport function onChildRemoved(arr:any[], child:any): any[] {\n  return arr.filter(c => c.key !== child.key);\n}\n\nexport function onChildUpdated(arr:any[], child:any, prevKey:string): any[] {\n  return arr.map((v, i, arr) => {\n    if(!prevKey && !i) {\n      return child;\n    } else if (i > 0 && arr[i-1].key === prevKey) {\n      return child;\n    } else {\n      return v;\n    }\n  });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}