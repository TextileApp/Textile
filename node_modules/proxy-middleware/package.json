{
  "_args": [
    [
      {
        "raw": "proxy-middleware@0.15.0",
        "scope": null,
        "escapedName": "proxy-middleware",
        "name": "proxy-middleware",
        "rawSpec": "0.15.0",
        "spec": "0.15.0",
        "type": "version"
      },
      "/Users/Matthew/Textile/node_modules/@ionic/app-scripts"
    ]
  ],
  "_from": "proxy-middleware@0.15.0",
  "_id": "proxy-middleware@0.15.0",
  "_inCache": true,
  "_location": "/proxy-middleware",
  "_nodeVersion": "4.1.2",
  "_npmUser": {
    "name": "superjoe",
    "email": "superjoe30@gmail.com"
  },
  "_npmVersion": "2.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "proxy-middleware@0.15.0",
    "scope": null,
    "escapedName": "proxy-middleware",
    "name": "proxy-middleware",
    "rawSpec": "0.15.0",
    "spec": "0.15.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@ionic/app-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/proxy-middleware/-/proxy-middleware-0.15.0.tgz",
  "_shasum": "a3fdf1befb730f951965872ac2f6074c61477a56",
  "_shrinkwrap": null,
  "_spec": "proxy-middleware@0.15.0",
  "_where": "/Users/Matthew/Textile/node_modules/@ionic/app-scripts",
  "author": {
    "name": "Andrew Kelley"
  },
  "bugs": {
    "url": "https://github.com/andrewrk/connect-proxy/issues"
  },
  "dependencies": {},
  "description": "http(s) proxy as connect middleware",
  "devDependencies": {
    "connect": "~3.3.5",
    "mocha": "~2.2.5",
    "serve-static": "~1.9.3"
  },
  "directories": {},
  "dist": {
    "shasum": "a3fdf1befb730f951965872ac2f6074c61477a56",
    "tarball": "https://registry.npmjs.org/proxy-middleware/-/proxy-middleware-0.15.0.tgz"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "gitHead": "d3f462e23d4dda4483fac601649bec33735548f1",
  "homepage": "https://github.com/andrewrk/connect-proxy#readme",
  "keywords": [
    "connect",
    "proxy",
    "middleware",
    "https",
    "http",
    "ssl"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "superjoe",
      "email": "superjoe30@gmail.com"
    }
  ],
  "name": "proxy-middleware",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/andrewrk/node-proxy-middleware.png)](http://travis-ci.org/andrewrk/node-proxy-middleware)\n\n### Usage:\n\n```js\nvar connect = require('connect');\nvar url = require('url');\nvar proxy = require('proxy-middleware');\n\nvar app = connect();\napp.use('/api', proxy(url.parse('https://example.com/endpoint')));\n// now requests to '/api/x/y/z' are proxied to 'https://example.com/endpoint/x/y/z'\n\n//same as example above but also uses a short hand string only parameter\napp.use('/api-string-only', proxy('https://example.com/endpoint'));\n```\n\n### Documentation:\n\n`proxyMiddleware(options)`\n\n`options` allows any options that are permitted on the [`http`](http://nodejs.org/api/http.html#http_http_request_options_callback) or [`https`](http://nodejs.org/api/https.html#https_https_request_options_callback) request options.\n\nOther options:\n- `route`: you can pass the route for connect middleware within the options, as well.\n- `via`: by default no [via header](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.45) is added. If you pass `true` for this option the local hostname will be used for the via header. You can also pass a string for this option in which case that will be used for the via header.\n- `cookieRewrite`: this option can be used to support cookies via the proxy by rewriting the cookie domain to that of the proxy server. By default cookie domains are not rewritten. The `cookieRewrite` option works as the `via` option - if you pass `true` the local hostname will be used, and if you pass a string that will be used as the rewritten cookie domain.\n- `preserveHost`: When enabled, this option will pass the Host: line from the incoming request to the proxied host. Default: `false`.\n\n### Usage with route:\n\n```js\nvar proxyOptions = url.parse('https://example.com/endpoint');\nproxyOptions.route = '/api';\n\nvar middleWares = [proxy(proxyOptions) /*, ...*/];\n\n// Grunt connect uses this method\nconnect(middleWares);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/andrewrk/connect-proxy.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.15.0"
}
