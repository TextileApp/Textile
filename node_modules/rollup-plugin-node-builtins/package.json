{
  "_args": [
    [
      {
        "raw": "rollup-plugin-node-builtins@2.0.0",
        "scope": null,
        "escapedName": "rollup-plugin-node-builtins",
        "name": "rollup-plugin-node-builtins",
        "rawSpec": "2.0.0",
        "spec": "2.0.0",
        "type": "version"
      },
      "/Users/Matthew/Textile/node_modules/@ionic/app-scripts"
    ]
  ],
  "_from": "rollup-plugin-node-builtins@2.0.0",
  "_id": "rollup-plugin-node-builtins@2.0.0",
  "_inCache": true,
  "_location": "/rollup-plugin-node-builtins",
  "_nodeVersion": "6.6.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/rollup-plugin-node-builtins-2.0.0.tgz_1475600652320_0.7409582445397973"
  },
  "_npmUser": {
    "name": "cwmma",
    "email": "calvin.metcalf@gmail.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rollup-plugin-node-builtins@2.0.0",
    "scope": null,
    "escapedName": "rollup-plugin-node-builtins",
    "name": "rollup-plugin-node-builtins",
    "rawSpec": "2.0.0",
    "spec": "2.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@ionic/app-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/rollup-plugin-node-builtins/-/rollup-plugin-node-builtins-2.0.0.tgz",
  "_shasum": "c6f291e167e9560ebea87fbfdc1abb44b0a7c1e6",
  "_shrinkwrap": null,
  "_spec": "rollup-plugin-node-builtins@2.0.0",
  "_where": "/Users/Matthew/Textile/node_modules/@ionic/app-scripts",
  "author": "",
  "bugs": {
    "url": "https://github.com/calvinmetcalf/rollup-plugin-node-builtins/issues"
  },
  "dependencies": {
    "buffer-es6": "^4.9.2",
    "crypto-browserify": "^3.11.0",
    "process-es6": "^0.11.2"
  },
  "description": "use node builtins in browser with rollup",
  "devDependencies": {
    "babel-preset-es2015-rollup": "^1.1.1",
    "debug": "^2.2.0",
    "mocha": "^3.0.2",
    "rollup": "^0.32.1",
    "rollup-plugin-babel": "^2.4.0",
    "rollup-plugin-node-globals": "^1.0.7",
    "serve": "^1.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c6f291e167e9560ebea87fbfdc1abb44b0a7c1e6",
    "tarball": "https://registry.npmjs.org/rollup-plugin-node-builtins/-/rollup-plugin-node-builtins-2.0.0.tgz"
  },
  "gitHead": "d227ad45e8c67b749d8ee7b3b60e30582dc09951",
  "homepage": "https://github.com/calvinmetcalf/rollup-plugin-node-builtins#readme",
  "jsnext:main": "dist/rollup-plugin-node-builtins.es6.js",
  "keywords": [
    "rollup-plugin"
  ],
  "license": "ISC",
  "main": "dist/rollup-plugin-node-builtins.cjs.js",
  "maintainers": [
    {
      "name": "cwmma",
      "email": "calvin.metcalf@gmail.com"
    }
  ],
  "name": "rollup-plugin-node-builtins",
  "optionalDependencies": {},
  "readme": "rollup-plugin-node-builtins\n===\n\n```\nnpm install --save-dev rollup-plugin-node-builtins\n```\n\nAllows the node builtins to be `require`d/`import`ed. Doing so gives the proper shims to support modules that were designed for Browserify, some modules require [rollup-plugin-node-globals](https://github.com/calvinmetcalf/rollup-plugin-node-globals).\n\nThe following modules include ES6 specific version which allow you to do named imports in addition to the default import and should work fine if you only use this plugin.\n\n- process*\n- events\n- stream*\n- util\n- path\n- buffer*\n- querystring\n- url\n- string_decoder*\n- punycode\n- http*†\n- https*†\n- os*\n- assert*\n- constants\n- timers*\n- console*‡\n- vm*§\n- zlib*\n- tty\n- domain\n\n\\* requires [node-globals plugin](https://github.com/calvinmetcalf/rollup-plugin-node-globals)\n\n† the http and https modules are actually the same and don't differentiate based on protocol\n\n‡ default export only, because it's console, seriously just use the global\n\n§ vm does not have all corner cases and has less of them in a web worker\n\nCrypto is not shimmed and and we just provide the commonjs one from browserify  and it will likely not work, if you really want it please pass `{crypto: true}` as an option.\n\nNot all included modules rollup equally, streams (and by extension anything that requires it like http) are a mess of circular references that are pretty much impossible to tree-shake out, similarly url methods are actually a shortcut to a url object so those methods don't tree shake out very well, punycode, path, querystring, events, util, and process tree shake very well especially if you do named imports.\n\nconfig for using this with something simple like events or querystring\n\n```js\nimport builtins from 'rollup-plugin-node-builtins';\nrollup({\n  entry: 'main.js',\n  plugins: [\n    builtins()\n  ]\n})\n```\n\nand now if main contains this, it should just work\n\n```js\nimport EventEmitter from 'events';\nimport {inherits} from 'util';\n\n// etc\n```\n\nConfig for something more complicated like http\n\n```js\nimport builtins from 'rollup-plugin-node-builtins';\nimport globals from 'rollup-plugin-node-globals';\nrollup({\n  entry: 'main.js',\n  plugins: [\n    globals(),\n    builtins()\n  ]\n})\n```\n\nLicense\n===\n\nMIT except ES6 ports of browserify modules which are whatever the original library was.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/calvinmetcalf/rollup-plugin-node-builtins.git"
  },
  "scripts": {
    "browser-test": "serve browser-test/dist",
    "build": "rollup -c -f cjs -o dist/rollup-plugin-node-builtins.cjs.js && rollup -c -f es6 -o dist/rollup-plugin-node-builtins.es6.js && node build-constants.js",
    "prebrowser-test": "rm browser-test/dist/bundle.js && npm run build && node ./browser-test/index.js",
    "prebuild": "rm -rf dist && mkdir dist",
    "prepublish": "npm test",
    "pretest": "npm run build",
    "test": "mocha"
  },
  "version": "2.0.0"
}
