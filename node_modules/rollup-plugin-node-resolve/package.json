{
  "_args": [
    [
      {
        "raw": "rollup-plugin-node-resolve@2.0.0",
        "scope": null,
        "escapedName": "rollup-plugin-node-resolve",
        "name": "rollup-plugin-node-resolve",
        "rawSpec": "2.0.0",
        "spec": "2.0.0",
        "type": "version"
      },
      "/Users/Matthew/Textile/node_modules/@ionic/app-scripts"
    ]
  ],
  "_from": "rollup-plugin-node-resolve@2.0.0",
  "_id": "rollup-plugin-node-resolve@2.0.0",
  "_inCache": true,
  "_location": "/rollup-plugin-node-resolve",
  "_nodeVersion": "0.12.14",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/rollup-plugin-node-resolve-2.0.0.tgz_1469979971377_0.5654256283305585"
  },
  "_npmUser": {
    "name": "trysound",
    "email": "trysound@yandex.ru"
  },
  "_npmVersion": "3.9.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rollup-plugin-node-resolve@2.0.0",
    "scope": null,
    "escapedName": "rollup-plugin-node-resolve",
    "name": "rollup-plugin-node-resolve",
    "rawSpec": "2.0.0",
    "spec": "2.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@ionic/app-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/rollup-plugin-node-resolve/-/rollup-plugin-node-resolve-2.0.0.tgz",
  "_shasum": "07e0ae94ac002a3ea36e8f33ca121d9f836b1309",
  "_shrinkwrap": null,
  "_spec": "rollup-plugin-node-resolve@2.0.0",
  "_where": "/Users/Matthew/Textile/node_modules/@ionic/app-scripts",
  "author": {
    "name": "Rich Harris",
    "email": "richard.a.harris@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/rollup/rollup-plugin-node-resolve/issues"
  },
  "dependencies": {
    "browser-resolve": "^1.11.0",
    "builtin-modules": "^1.1.0",
    "resolve": "^1.1.6"
  },
  "description": "Bundle third-party dependencies in node_modules",
  "devDependencies": {
    "buble": "^0.10.6",
    "es5-ext": "^0.10.11",
    "eslint": "^2.11.1",
    "mocha": "^2.3.3",
    "rollup": "^0.27.1",
    "rollup-plugin-buble": "^0.10.0",
    "rollup-plugin-commonjs": "^2.0.0",
    "string-capitalize": "^1.0.1",
    "vlq": "^0.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "07e0ae94ac002a3ea36e8f33ca121d9f836b1309",
    "tarball": "https://registry.npmjs.org/rollup-plugin-node-resolve/-/rollup-plugin-node-resolve-2.0.0.tgz"
  },
  "files": [
    "src",
    "dist",
    "README.md"
  ],
  "gitHead": "3befb3ba9856a375881708258e39c7c7a7d63e86",
  "homepage": "https://github.com/rollup/rollup-plugin-node-resolve#readme",
  "jsnext:main": "dist/rollup-plugin-node-resolve.es6.js",
  "keywords": [
    "rollup",
    "rollup-plugin",
    "es2015",
    "npm",
    "modules"
  ],
  "license": "MIT",
  "main": "dist/rollup-plugin-node-resolve.cjs.js",
  "maintainers": [
    {
      "name": "rich_harris",
      "email": "richard.a.harris@gmail.com"
    },
    {
      "name": "trysound",
      "email": "trysound@yandex.ru"
    }
  ],
  "name": "rollup-plugin-node-resolve",
  "optionalDependencies": {},
  "readme": "# rollup-plugin-node-resolve\r\n\r\n*This plugin used to be called rollup-plugin-npm*\r\n\r\nLocate modules using the [Node resolution algorithm](https://nodejs.org/api/modules.html#modules_all_together), for using third party modules in `node_modules`\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm install --save-dev rollup-plugin-node-resolve\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nimport { rollup } from 'rollup';\r\nimport nodeResolve from 'rollup-plugin-node-resolve';\r\n\r\nrollup({\r\n  entry: 'main.js',\r\n  plugins: [\r\n    nodeResolve({\r\n      // use \"jsnext:main\" if possible\r\n      // – see https://github.com/rollup/rollup/wiki/jsnext:main\r\n      jsnext: true,  // Default: false\r\n\r\n      // use \"main\" field or index.js, even if it's not an ES6 module\r\n      // (needs to be converted from CommonJS to ES6\r\n      // – see https://github.com/rollup/rollup-plugin-commonjs\r\n      main: true,  // Default: true\r\n\r\n      // if there's something your bundle requires that you DON'T\r\n      // want to include, add it to 'skip'. Local and relative imports\r\n      // can be skipped by giving the full filepath. E.g., \r\n      // `path.resolve('src/relative-dependency.js')`\r\n      skip: [ 'some-big-dependency' ],  // Default: []\r\n\r\n      // some package.json files have a `browser` field which\r\n      // specifies alternative files to load for people bundling\r\n      // for the browser. If that's you, use this option, otherwise\r\n      // pkg.browser will be ignored\r\n      browser: true,  // Default: false\r\n\r\n      // not all files you want to resolve are .js files\r\n      extensions: [ '.js', '.json' ],  // Default: ['.js']\r\n\r\n      // whether to prefer built-in modules (e.g. `fs`, `path`) or\r\n      // local ones with the same names\r\n      preferBuiltins: false  // Default: true\r\n      \r\n    })\r\n  ]\r\n}).then( bundle => bundle.write({ dest: 'bundle.js', format: 'iife' }) );\r\n\r\n// alongside rollup-plugin-commonjs, for using non-ES6 third party modules\r\nimport commonjs from 'rollup-plugin-commonjs';\r\n\r\nrollup({\r\n  entry: 'main.js',\r\n  plugins: [\r\n    nodeResolve({ jsnext: true, main: true }),\r\n    commonjs()\r\n  ]\r\n}).then(bundle => bundle.write({ \r\n  dest: 'bundle.js', \r\n  moduleName: 'MyModule',\r\n  format: 'iife' \r\n})).catch(err => console.log(err.stack));\r\n```\r\n\r\n\r\n## License\r\n\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rollup/rollup-plugin-node-resolve.git"
  },
  "scripts": {
    "posttest": "eslint src test/*.js",
    "prepublish": "npm test",
    "pretest": "rollup -c",
    "test": "mocha"
  },
  "version": "2.0.0"
}
