{"version":3,"sources":["stack.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAM,QAAQ,SAAR,KAAQ,CAAC,MAAD,EAAY;AACtB,QAAI,kBAAJ;QACI,qBADJ;QAEI,cAFJ;QAGI,qBAHJ;QAII,cAJJ,CADsB;;AAOtB,gBAAY,qBAAM;AACd,gBAAQ,EAAR,CADc;AAEd,uBAAe,IAAI,kBAAQ,YAAR,EAAnB,CAFc;AAGd,uBAAe,uBAAf,CAHc;AAId,gBAAQ,EAAR,CAJc;KAAN,CAPU;;AActB;;;;;;;AAdsB,SAqBtB,CAAM,SAAN,GAAkB,YAAM;AACpB,eAAO,MAAP,CADoB;KAAN;;;;;;;AArBI,SA8BtB,CAAM,eAAN,GAAwB,YAAM;AAC1B,eAAO,YAAP,CAD0B;KAAN;;;;;;;;;AA9BF,SAyCtB,CAAM,EAAN,GAAW,UAAC,SAAD,EAAY,QAAZ,EAAyB;AAChC,qBAAa,EAAb,CAAgB,SAAhB,EAA2B,QAA3B,EADgC;KAAzB;;;;;;;;AAzCW,SAmDtB,CAAM,UAAN,GAAmB,UAAC,OAAD,EAAa;AAC5B,YAAM,OAAO,oBAAK,KAAL,EAAY,OAAZ,CAAP,CADsB;AAE5B,YAAM,SAAS,CACX,UADW,EAEX,aAFW,EAGX,cAHW,EAIX,eAJW,EAKX,SALW,EAMX,YANW,EAOX,WAPW,EAQX,UARW,EASX,SATW,CAAT;;;AAFsB,cAe5B,CAAO,OAAP,CAAe,UAAC,SAAD,EAAe;AAC1B,iBAAK,EAAL,CAAQ,SAAR,EAAmB,UAAC,IAAD,EAAU;AACzB,6BAAa,OAAb,CAAqB,SAArB,EAAgC,IAAhC,EADyB;aAAV,CAAnB,CAD0B;SAAf,CAAf,CAf4B;;AAqB5B,cAAM,IAAN,CAAW;AACP,4BADO;AAEP,sBAFO;SAAX,EArB4B;;AA0B5B,eAAO,IAAP,CA1B4B;KAAb;;;;;;;;AAnDG,SAsFtB,CAAM,OAAN,GAAgB,UAAC,OAAD,EAAa;AACzB,YAAM,QAAQ,oBAAO,KAAP,EAAc;AACxB,4BADwB;SAAd,CAAR,CADmB;;AAKzB,YAAI,KAAJ,EAAW;AACP,mBAAO,MAAM,IAAN,CADA;SAAX;;AAIA,eAAO,IAAP,CATyB;KAAb;;;;;;;;AAtFM,SAwGtB,CAAM,WAAN,GAAoB,UAAC,IAAD,EAAU;AAC1B,eAAO,sBAAS,KAAT,EAAgB;AACnB,sBADmB;SAAhB,CAAP,CAD0B;KAAV,CAxGE;;AA8GtB,WAAO,KAAP,CA9GsB;CAAZ;;kBAiHC","file":"stack.js","sourcesContent":["import _ from 'lodash';\nimport Sister from 'sister';\nimport rebound from 'rebound';\nimport Card from './card';\n\n/**\n * @param {Object} config Stack configuration.\n * @return {Object} An instance of Stack object.\n */\nconst Stack = (config) => {\n    let construct,\n        eventEmitter,\n        index,\n        springSystem,\n        stack;\n\n    construct = () => {\n        stack = {};\n        springSystem = new rebound.SpringSystem();\n        eventEmitter = Sister();\n        index = [];\n    };\n\n    construct();\n\n    /**\n     * Get the configuration object.\n     *\n     * @return {Object}\n     */\n    stack.getConfig = () => {\n        return config;\n    };\n\n    /**\n     * Get a singleton instance of the SpringSystem physics engine.\n     *\n     * @return {Sister}\n     */\n    stack.getSpringSystem = () => {\n        return springSystem;\n    };\n\n    /**\n     * Proxy to the instance of the event emitter.\n     *\n     * @param {String} eventName\n     * @param {String} listener\n     * @return {undefined}\n     */\n    stack.on = (eventName, listener) => {\n        eventEmitter.on(eventName, listener);\n    };\n\n    /**\n     * Creates an instance of Card and associates it with an element.\n     *\n     * @param {HTMLElement} element\n     * @return {Card}\n     */\n    stack.createCard = (element) => {\n        const card = Card(stack, element);\n        const events = [\n            'throwout',\n            'throwoutend',\n            'throwoutleft',\n            'throwoutright',\n            'throwin',\n            'throwinend',\n            'dragstart',\n            'dragmove',\n            'dragend'\n        ];\n\n        // Proxy Card events to the Stack.\n        events.forEach((eventName) => {\n            card.on(eventName, (data) => {\n                eventEmitter.trigger(eventName, data);\n            });\n        });\n\n        index.push({\n            element,\n            card\n        });\n\n        return card;\n    };\n\n    /**\n     * Returns an instance of Card associated with an element.\n     *\n     * @param {HTMLElement} element\n     * @return {Card|null}\n     */\n    stack.getCard = (element) => {\n        const group = _.find(index, {\n            element\n        });\n\n        if (group) {\n            return group.card;\n        }\n\n        return null;\n    };\n\n    /**\n     * Remove an instance of Card from the stack index.\n     *\n     * @param {Card} card\n     * @return {null}\n     */\n    stack.destroyCard = (card) => {\n        return _.remove(index, {\n            card\n        });\n    };\n\n    return stack;\n};\n\nexport default Stack;\n"],"sourceRoot":"/source/"}